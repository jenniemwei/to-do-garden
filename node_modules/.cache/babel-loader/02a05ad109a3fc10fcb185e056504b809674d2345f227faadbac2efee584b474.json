{"ast":null,"code":"import React,{useState}from\"react\";import\"../styles/Lists.css\";import ListOptions from\"./ListOptions\";import EditListMode from\"./EditListMode\";import{Textfit}from\"react-textfit\";import{MoreVertical}from\"react-feather\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function TaskList(_ref){let{listIndex,taskLists,setTaskLists}=_ref;function handleChangeTaskState(index,key,value){const newTaskLists=[...taskLists];newTaskLists[index][key]=value;setTaskLists(newTaskLists);}const listItems=taskLists[listIndex].currentItems;const checkedItems=taskLists[listIndex].checkedItems;const editModeDisplayed=taskLists[listIndex].editModeDisplayed;const optionsDisplayed=taskLists[listIndex].optionsDisplayed;function handleCheckBoxChange(event,index,item){console.log(\"item\",item);const currCheckbox=event.target;console.log(\"currCheckbox\",currCheckbox);// currCheckbox.checked=\"true;\nconsole.log(\"currCheckbox\",event.target.checked);// setChecked()\nconst newListItems=[...listItems];const newCheckedItems=[...checkedItems,item];console.log(\"newCheckedItems\",newCheckedItems);newListItems.splice(index,1);// const newListItems = listItems.filter((item, i) => i !== index)\nhandleChangeTaskState(listIndex,\"checkedItems\",newCheckedItems);console.log(\"newCheckedItems\",newCheckedItems);handleChangeTaskState(listIndex,\"currentItems\",newListItems);}function handleOptionsClick(event){const currentOptionsDisplayed=taskLists[listIndex].optionsDisplayed;handleChangeTaskState(listIndex,\"optionsDisplayed\",!currentOptionsDisplayed);}// function createNewTask(event) {\n//   const text = event.target.value\n//   setListItems([...listItems, text])\n// }\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[editModeDisplayed&&/*#__PURE__*/_jsx(EditListMode,{taskLists:taskLists,handleChangeTaskState:handleChangeTaskState,listIndex:listIndex}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-header\",children:[/*#__PURE__*/_jsx(Textfit,{className:\"list-name\",mode:\"single\",forceSingleModeWidth:true,style:{width:\"90%\"},min:10,max:30,children:taskLists[listIndex].title}),/*#__PURE__*/_jsx(\"div\",{className:\"more-container\",children:/*#__PURE__*/_jsx(MoreVertical,{id:\"more-button\",onClick:event=>{handleOptionsClick(event);}})})]}),/*#__PURE__*/_jsx(\"hr\",{}),optionsDisplayed&&/*#__PURE__*/_jsx(ListOptions,{taskLists:taskLists,handleChangeTaskState:handleChangeTaskState,setTaskLists:setTaskLists,listIndex:listIndex}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-items-container\",children:[listItems.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:false,onChange:event=>{handleCheckBoxChange(event,index,item);},className:\"checkbox\",autoFocus:true}),/*#__PURE__*/_jsx(\"p\",{className:\"displayed-task\",children:item})]},index)),/*#__PURE__*/_jsx(\"h3\",{children:\"Completed\"}),checkedItems.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",disabled:true,checked:true// className=\"task\"\n}),/*#__PURE__*/_jsx(\"p\",{className:\"displayed-task\",children:item})]},index+listItems.length))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flower-container\",children:/*#__PURE__*/_jsx(\"p\",{children:\"flower\"})})]})]});}//arrow function =>{handleInputChange(event,index)} allows parameters passed","map":{"version":3,"names":["React","useState","ListOptions","EditListMode","Textfit","MoreVertical","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskList","_ref","listIndex","taskLists","setTaskLists","handleChangeTaskState","index","key","value","newTaskLists","listItems","currentItems","checkedItems","editModeDisplayed","optionsDisplayed","handleCheckBoxChange","event","item","console","log","currCheckbox","target","checked","newListItems","newCheckedItems","splice","handleOptionsClick","currentOptionsDisplayed","children","className","mode","forceSingleModeWidth","style","width","min","max","title","id","onClick","map","type","onChange","autoFocus","disabled","length"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/Lists.css\";\nimport ListOptions from \"./ListOptions\";\nimport EditListMode from \"./EditListMode\";\nimport { Textfit } from \"react-textfit\";\nimport { MoreVertical } from \"react-feather\";\n\nexport default function TaskList({ listIndex, taskLists, setTaskLists }) {\n  function handleChangeTaskState(index, key, value) {\n    const newTaskLists = [...taskLists];\n    newTaskLists[index][key] = value;\n    setTaskLists(newTaskLists);\n  }\n\n  const listItems = taskLists[listIndex].currentItems;\n  const checkedItems = taskLists[listIndex].checkedItems;\n  const editModeDisplayed = taskLists[listIndex].editModeDisplayed;\n  const optionsDisplayed = taskLists[listIndex].optionsDisplayed;\n\n  function handleCheckBoxChange(event, index, item) {\n    console.log(\"item\", item);\n    const currCheckbox = event.target;\n    console.log(\"currCheckbox\", currCheckbox);\n    // currCheckbox.checked=\"true;\n    console.log(\"currCheckbox\", event.target.checked);\n    // setChecked()\n    const newListItems = [...listItems];\n    const newCheckedItems = [...checkedItems, item];\n    console.log(\"newCheckedItems\", newCheckedItems);\n    newListItems.splice(index, 1);\n\n    // const newListItems = listItems.filter((item, i) => i !== index)\n\n    handleChangeTaskState(listIndex, \"checkedItems\", newCheckedItems);\n    console.log(\"newCheckedItems\", newCheckedItems);\n    handleChangeTaskState(listIndex, \"currentItems\", newListItems);\n  }\n\n  function handleOptionsClick(event) {\n    const currentOptionsDisplayed = taskLists[listIndex].optionsDisplayed;\n    handleChangeTaskState(\n      listIndex,\n      \"optionsDisplayed\",\n      !currentOptionsDisplayed\n    );\n  }\n\n  // function createNewTask(event) {\n  //   const text = event.target.value\n  //   setListItems([...listItems, text])\n  // }\n\n  return (\n    <>\n      {editModeDisplayed && (\n        <EditListMode\n          taskLists={taskLists}\n          handleChangeTaskState={handleChangeTaskState}\n          listIndex={listIndex}\n        />\n      )}\n      <div className=\"task-list\">\n        <div className=\"list-container\">\n          <div className=\"list-header\">\n            <Textfit\n              className=\"list-name\"\n              mode=\"single\"\n              forceSingleModeWidth={true}\n              style={{ width: \"90%\" }}\n              min={10}\n              max={30}\n            >\n              {taskLists[listIndex].title}\n            </Textfit>\n            <div className=\"more-container\">\n            <MoreVertical\n             id=\"more-button\"\n              onClick={(event) => {\n                handleOptionsClick(event);\n              }}\n            ></MoreVertical>\n            </div>\n           \n          </div>\n          <hr></hr>\n\n          {optionsDisplayed && (\n            <ListOptions\n              taskLists={taskLists}\n              handleChangeTaskState={handleChangeTaskState}\n              setTaskLists={setTaskLists}\n              listIndex={listIndex}\n            />\n          )}\n\n          <ul className=\"list-items-container\">\n            {listItems.map((item, index) => (\n              <li className=\"task-container\" key={index}>\n                <input\n                  type=\"checkbox\"\n                  checked={false}\n                  onChange={(event) => {\n                    handleCheckBoxChange(event, index, item);\n                  }}\n                  className=\"checkbox\"\n                  autoFocus\n                />\n                <p className=\"displayed-task\">{item}</p>\n              </li>\n            ))}\n            <h3>Completed</h3>\n            {checkedItems.map((item, index) => (\n              <li className=\"task-container\" key={index + listItems.length}>\n                <input\n                  type=\"checkbox\"\n                  disabled={true}\n                  checked={true}\n                  // className=\"task\"\n                />\n                <p className=\"displayed-task\">{item}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"flower-container\">\n          <p>flower</p>\n        </div>\n      </div>\n    </>\n  );\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}