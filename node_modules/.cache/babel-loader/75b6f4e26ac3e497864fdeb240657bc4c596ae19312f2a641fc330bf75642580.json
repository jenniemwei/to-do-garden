{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const [listItems, setListItems] = useState(['poop', 'pee']); //[ declared thing, how you set it to something/override]\n  const [checkedItems, setCheckedItems] = useState([]);\n  // const[checked, setChecked] = useState(false)\n  const [optionsDisplayed, setOptionsDisplayed] = useState(true);\n  const [title, setTitle] = useState('Title');\n  const [editModeDisplayed, setEditModeDisplayed] = useState(false);\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleCheckBoxChange(event, index) {\n    const currCheckbox = event.target.value;\n    // setChecked()\n    const newCheckedItems = [...checkedItems, currCheckbox];\n    setCheckedItems(newCheckedItems);\n  }\n  function handleOptionsClick(event) {\n    setOptionsDisplayed(!optionsDisplayed);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [editModeDisplayed && /*#__PURE__*/_jsxDEV(EditListMode, {\n      listItems: listItems,\n      setListItems: setListItems,\n      setTitle: setTitle,\n      title: title,\n      setEditModeDisplayed: setEditModeDisplayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: event => {\n            handleTitleChange(event);\n          },\n          className: \"list-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleOptionsClick(event);\n          },\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), optionsDisplayed && /*#__PURE__*/_jsxDEV(ListOptions, {\n        setEditModeDisplayed: setEditModeDisplayed,\n        setOptionsDisplayed: setOptionsDisplayed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n            //checked left= if box is checked or not, checked right= variable storing T/F for checked\n            ,\n            onChnge: event => {\n              handleCheckBoxChange(event, index);\n            },\n            className: \"task\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"displayed-task\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n_s(TaskList, \"dUqjHW+Y6PozdWnXteyCJUxtXBY=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","ListOptions","EditListMode","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","listItems","setListItems","checkedItems","setCheckedItems","optionsDisplayed","setOptionsDisplayed","title","setTitle","editModeDisplayed","setEditModeDisplayed","handleTaskChange","event","index","newListItems","target","value","style","height","scrollHeight","handleTitleChange","handleCheckBoxChange","currCheckbox","newCheckedItems","handleOptionsClick","createNewTask","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","onClick","map","item","type","onChnge","autoFocus","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\n\nexport default function TaskList() {\n\n  const[listItems, setListItems] = useState(['poop','pee']) //[ declared thing, how you set it to something/override]\n  const [checkedItems, setCheckedItems] = useState([])\n  // const[checked, setChecked] = useState(false)\n  const[optionsDisplayed, setOptionsDisplayed]=useState(true)\n  const[title,setTitle] = useState('Title')\n  const[editModeDisplayed, setEditModeDisplayed]=useState(false)\n\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems]\n    newListItems[index] = event.target.value\n    setListItems(newListItems)\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`; \n    \n  }\n  function handleTitleChange(event){\n    setTitle(event.target.value)\n  }\n\n  function handleCheckBoxChange(event,index){\n    const currCheckbox=event.target.value\n    // setChecked()\n    const newCheckedItems = [...checkedItems, currCheckbox]\n    setCheckedItems(newCheckedItems)\n\n  }\n\n  function handleOptionsClick(event){\n    setOptionsDisplayed(!optionsDisplayed)\n  }\n\n  function createNewTask(event) {\n    const text = event.target.value\n    setListItems([...listItems, text])\n  }\n  \n\n\n  return (\n    <>\n      {editModeDisplayed&&<EditListMode \n        listItems={listItems}\n        setListItems={setListItems}\n        setTitle={setTitle}\n        title={title}\n        setEditModeDisplayed={setEditModeDisplayed}\n      />}\n      <div className=\"TaskList\">\n        <div className='list-header'>      \n          <input value={title} onChange={(event)=>{handleTitleChange(event)}} className=\"list-name\"></input>\n          <button onClick={(event)=>{handleOptionsClick(event)}}>edit</button>\n          </div>\n\n          {optionsDisplayed && <ListOptions setEditModeDisplayed={setEditModeDisplayed} setOptionsDisplayed={setOptionsDisplayed}/>}\n        <ul>\n          {listItems.map((item, index) => (\n            <li className='task-container' key={index}>\n              <input \n                type= 'checkbox'\n                 //checked left= if box is checked or not, checked right= variable storing T/F for checked\n                onChnge={(event) => {handleCheckBoxChange(event, index)}} className=\"task\" autoFocus />\n                <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n\n        </ul>\n        {/* <ul>\n          {checkedItems.map((item, index) => {\n            return <li key={index}>{item}</li>\n          })}\n        </ul> */}\n\n      </div>\n    </>\n  );\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}