{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx\",\n  _s = $RefreshSig$();\n// things to do:\n//completed count\n\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport TaskList from \"./TaskList\";\nimport \"../styles/AllTaskLists.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllTaskLists() {\n  _s();\n  const [taskLists, setTaskLists] = useState([{\n    title: \"Welcome to 'To Do Garden!\",\n    currentItems: [\"Check off tasks to grow flowers!\", \"Click the three dots to edit lists or delete lists\", \"After clicking 'edit list' start typing to edit tasks or title\", \"delete this list and create your own!\"],\n    checkedItems: [],\n    editModeDisplayed: false,\n    optionsDisplayed: false\n  }]);\n  useEffect(() => {\n    const taskLists = JSON.parse(localStorage.getItem(\"taskLists\"));\n    if (taskLists) {\n      setTaskLists(taskLists);\n    }\n  }, []);\n  useEffect(() => {\n    if (taskLists.length > 0) {\n      localStorage.setItem(\"taskLists\", JSON.stringify(taskLists));\n    }\n  }, [taskLists]);\n  function handleNewList() {\n    setTaskLists([...taskLists, {\n      title: \"Title\",\n      currentItems: [],\n      checkedItems: [],\n      editModeDisplayed: true,\n      optionsDisplayed: false\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"website-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"homepage-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"homepage-title\",\n        children: \"TO DO GARDEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"blue-button\",\n        onClick: event => {\n          handleNewList(event);\n        },\n        children: \"+ NEW LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n      columnsCountBreakPoints: {\n        700: 1,\n        800: 2,\n        1200: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        gutter: \"2vw\",\n        children: taskLists.map((taskList, index) => {\n          return /*#__PURE__*/_jsxDEV(TaskList, {\n            listIndex: index,\n            taskLists: taskLists,\n            setTaskLists: setTaskLists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AllTaskLists, \"DtTvdSB9P7p9gKFhCnqAsx3pZGw=\");\n_c = AllTaskLists;\nvar _c;\n$RefreshReg$(_c, \"AllTaskLists\");","map":{"version":3,"names":["Masonry","ResponsiveMasonry","TaskList","useEffect","useState","jsxDEV","_jsxDEV","AllTaskLists","_s","taskLists","setTaskLists","title","currentItems","checkedItems","editModeDisplayed","optionsDisplayed","JSON","parse","localStorage","getItem","length","setItem","stringify","handleNewList","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","event","columnsCountBreakPoints","gutter","map","taskList","index","listIndex","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx"],"sourcesContent":["// things to do:\n//completed count\n\nimport Masonry,{ResponsiveMasonry} from \"react-responsive-masonry\"; \nimport TaskList from \"./TaskList\"\nimport \"../styles/AllTaskLists.css\"\nimport { useEffect, useState } from \"react\"\n\nexport default function AllTaskLists() {\n  const [taskLists, setTaskLists] = useState([   {\n    title: \"Welcome to 'To Do Garden!\",\n    currentItems: [\"Check off tasks to grow flowers!\", \"Click the three dots to edit lists or delete lists\", \"After clicking 'edit list' start typing to edit tasks or title\", \"delete this list and create your own!\"],\n    checkedItems: [],\n    editModeDisplayed: false,\n    optionsDisplayed: false,\n  }\n  ]); \n  \n  useEffect(() => {\n    const taskLists = JSON.parse(localStorage.getItem(\"taskLists\"));\n    if (taskLists) {\n      setTaskLists(taskLists);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (taskLists.length > 0) {\n      localStorage.setItem(\"taskLists\", JSON.stringify(taskLists));\n    }\n  } , [taskLists]);\n\n\n\n  function handleNewList() {\n    setTaskLists([\n      ...taskLists,\n      {\n        title: \"Title\",\n        currentItems: [],\n        checkedItems: [],\n        editModeDisplayed: true,\n        optionsDisplayed: false,\n      }\n    ])\n  }\n\n\n  return (\n    <div id=\"website-container\">\n    <header id=\"homepage-header\">\n      <h1 id=\"homepage-title\">TO DO GARDEN</h1>\n      <button className=\"blue-button\" onClick={(event)=>{handleNewList(event)}}>+ NEW LIST</button>\n    </header>\n    {/* className=\"all-lists-container\" */}\n    <ResponsiveMasonry \n    columnsCountBreakPoints={{ 700: 1, 800: 2, 1200: 3 }}>\n      <Masonry gutter=\"2vw\">\n      {taskLists.map((taskList, index) => {\n        return (\n          <TaskList\n            listIndex={index}\n            taskLists={taskLists}\n            setTaskLists={setTaskLists}\n          />\n        )\n      })}\n      </Masonry>\n    </ResponsiveMasonry>\n</div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}