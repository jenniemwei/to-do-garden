{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx\";\nimport React, { useState } from \"react\";\nimport \"../styles/Lists.css\";\nimport ListOptions from \"./ListOptions\";\nimport EditListMode from \"./EditListMode\";\nimport { MoreVertical } from \"react-feather\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList({\n  listIndex,\n  taskLists,\n  setTaskLists\n}) {\n  function handleChangeTaskState(index, key, value) {\n    const newTaskLists = [...taskLists];\n    newTaskLists[index][key] = value;\n    setTaskLists(newTaskLists);\n  }\n  const listItems = taskLists[listIndex].currentItems;\n  const checkedItems = taskLists[listIndex].checkedItems;\n  const editModeDisplayed = taskLists[listIndex].editModeDisplayed;\n  const optionsDisplayed = taskLists[listIndex].optionsDisplayed;\n  function handleCheckBoxChange(event, index, item) {\n    console.log(\"item\", item);\n    const currCheckbox = event.target;\n    console.log(\"currCheckbox\", currCheckbox);\n    // currCheckbox.checked=\"true;\n    console.log(\"currCheckbox\", event.target.checked);\n    // setChecked()\n    const newListItems = [...listItems];\n    const newCheckedItems = [...checkedItems, item];\n    console.log(\"newCheckedItems\", newCheckedItems);\n    newListItems.splice(index, 1);\n\n    // const newListItems = listItems.filter((item, i) => i !== index)\n\n    handleChangeTaskState(listIndex, \"checkedItems\", newCheckedItems);\n    console.log(\"newCheckedItems\", newCheckedItems);\n    handleChangeTaskState(listIndex, \"currentItems\", newListItems);\n  }\n  function handleOptionsClick(event) {\n    const currentOptionsDisplayed = taskLists[listIndex].optionsDisplayed;\n    handleChangeTaskState(listIndex, \"optionsDisplayed\", !currentOptionsDisplayed);\n  }\n\n  // function createNewTask(event) {\n  //   const text = event.target.value\n  //   setListItems([...listItems, text])\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [editModeDisplayed && /*#__PURE__*/_jsxDEV(EditListMode, {\n      taskLists: taskLists,\n      handleChangeTaskState: handleChangeTaskState,\n      listIndex: listIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-name\",\n            mode: \"single\",\n            forceSingleModeWidth: true,\n            style: {\n              width: \"90%\"\n            },\n            min: 10,\n            max: 30,\n            children: taskLists[listIndex].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more-container\",\n            children: /*#__PURE__*/_jsxDEV(MoreVertical, {\n              id: \"more-button\",\n              onClick: event => {\n                handleOptionsClick(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), optionsDisplayed && /*#__PURE__*/_jsxDEV(ListOptions, {\n          taskLists: taskLists,\n          handleChangeTaskState: handleChangeTaskState,\n          setTaskLists: setTaskLists,\n          listIndex: listIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-items-container\",\n          children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"task-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: false,\n              onChange: event => {\n                handleCheckBoxChange(event, index, item);\n              },\n              className: \"checkbox\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"displayed-task\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), checkedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"task-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              disabled: true,\n              checked: true\n              // className=\"task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"displayed-task\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, index + listItems.length, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flower-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"flower\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","ListOptions","EditListMode","MoreVertical","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","listIndex","taskLists","setTaskLists","handleChangeTaskState","index","key","value","newTaskLists","listItems","currentItems","checkedItems","editModeDisplayed","optionsDisplayed","handleCheckBoxChange","event","item","console","log","currCheckbox","target","checked","newListItems","newCheckedItems","splice","handleOptionsClick","currentOptionsDisplayed","children","fileName","_jsxFileName","lineNumber","columnNumber","className","mode","forceSingleModeWidth","style","width","min","max","title","id","onClick","map","type","onChange","autoFocus","disabled","length","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/Lists.css\";\nimport ListOptions from \"./ListOptions\";\nimport EditListMode from \"./EditListMode\";\nimport { MoreVertical } from \"react-feather\";\n\n\nexport default function TaskList({ listIndex, taskLists, setTaskLists }) {\n  function handleChangeTaskState(index, key, value) {\n    const newTaskLists = [...taskLists];\n    newTaskLists[index][key] = value;\n    setTaskLists(newTaskLists);\n  }\n\n  const listItems = taskLists[listIndex].currentItems;\n  const checkedItems = taskLists[listIndex].checkedItems;\n  const editModeDisplayed = taskLists[listIndex].editModeDisplayed;\n  const optionsDisplayed = taskLists[listIndex].optionsDisplayed;\n\n  function handleCheckBoxChange(event, index, item) {\n    console.log(\"item\", item);\n    const currCheckbox = event.target;\n    console.log(\"currCheckbox\", currCheckbox);\n    // currCheckbox.checked=\"true;\n    console.log(\"currCheckbox\", event.target.checked);\n    // setChecked()\n    const newListItems = [...listItems];\n    const newCheckedItems = [...checkedItems, item];\n    console.log(\"newCheckedItems\", newCheckedItems);\n    newListItems.splice(index, 1);\n\n    // const newListItems = listItems.filter((item, i) => i !== index)\n\n    handleChangeTaskState(listIndex, \"checkedItems\", newCheckedItems);\n    console.log(\"newCheckedItems\", newCheckedItems);\n    handleChangeTaskState(listIndex, \"currentItems\", newListItems);\n  }\n\n  function handleOptionsClick(event) {\n    const currentOptionsDisplayed = taskLists[listIndex].optionsDisplayed;\n    handleChangeTaskState(\n      listIndex,\n      \"optionsDisplayed\",\n      !currentOptionsDisplayed\n    );\n  }\n\n  // function createNewTask(event) {\n  //   const text = event.target.value\n  //   setListItems([...listItems, text])\n  // }\n\n  return (\n    <>\n      {editModeDisplayed && (\n        <EditListMode\n          taskLists={taskLists}\n          handleChangeTaskState={handleChangeTaskState}\n          listIndex={listIndex}\n        />\n      )}\n      <div className=\"task-list \">\n        <div className=\"list-container \">\n          <div className=\"list-header\">\n            <div\n              className=\"list-name\"\n              mode=\"single\"\n              forceSingleModeWidth={true}\n              style={{ width: \"90%\" }}\n              min={10}\n              max={30}\n            >\n              {taskLists[listIndex].title}\n            </div>\n            <div className=\"more-container\">\n            <MoreVertical\n             id=\"more-button\"\n              onClick={(event) => {\n                handleOptionsClick(event);\n              }}\n            ></MoreVertical>\n            </div>\n           \n          </div>\n          <hr></hr>\n\n          {optionsDisplayed && (\n            <ListOptions\n              taskLists={taskLists}\n              handleChangeTaskState={handleChangeTaskState}\n              setTaskLists={setTaskLists}\n              listIndex={listIndex}\n            />\n          )}\n\n          <ul className=\"list-items-container\">\n            {listItems.map((item, index) => (\n              <li className=\"task-container\" key={index}>\n                <input\n                  type=\"checkbox\"\n                  checked={false}\n                  onChange={(event) => {\n                    handleCheckBoxChange(event, index, item);\n                  }}\n                  className=\"checkbox\"\n                  autoFocus\n                />\n                <p className=\"displayed-task\">{item}</p>\n              </li>\n            ))}\n            <h3>Completed</h3>\n            {checkedItems.map((item, index) => (\n              <li className=\"task-container\" key={index + listItems.length}>\n                <input\n                  type=\"checkbox\"\n                  disabled={true}\n                  checked={true}\n                  // className=\"task\"\n                />\n                <p className=\"displayed-task\">{item}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"flower-container\">\n          <p>flower</p>\n        </div>\n      </div>\n    </>\n  );\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}