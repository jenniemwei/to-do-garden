{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const [listItems, setListItems] = useState([]); //[ declared thing, how you set it to something/override]\n  const [checked, setChecked] = useState(false);\n  const [optionsDisplayed, setOptionsDisplayed] = useState(true);\n  const [title, setTitle] = useState('Title');\n  const [editModeDisplayed, setEditModeDisplayed] = useState(false);\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleCheckBoxChange(event, index) {\n    const currCheckbox = event.target.value;\n    setChecked();\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    if (taskContent.length === 0) {\n      const newListItems = [...listItems];\n      newListItems.pop(index);\n      setListItems(newListItems);\n    }\n  }\n  function handleOptionsClick(event) {\n    setOptionsDisplayed(!optionsDisplayed);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EditListMode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: event => {\n            handleTitleChange(event);\n          },\n          className: \"list-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleOptionsClick(event);\n          },\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), optionsDisplayed && /*#__PURE__*/_jsxDEV(ListOptions, {\n        editModeDisplayed: editModeDisplayed,\n        setEditModeDisplayed: setEditModeDisplayed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checked //checked left= if box is checked or not, checked right= variable storing T/F for checked\n            ,\n            onChange: event => {\n              handleCheckBoxChange(event, index);\n            },\n            className: \"task\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            value: \"\",\n            placeholder: \"+ New Task\",\n            onClick: e => createNewTask(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: \"true\",\n            type: \"checkbox\",\n            id: \"invisible-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n_s(TaskList, \"kL9bgAjFC3Rg271mNSxKpDVcYRE=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","ListOptions","EditListMode","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","listItems","setListItems","checked","setChecked","optionsDisplayed","setOptionsDisplayed","title","setTitle","editModeDisplayed","setEditModeDisplayed","handleTaskChange","event","index","newListItems","target","value","style","height","scrollHeight","handleTitleChange","handleCheckBoxChange","currCheckbox","handleUserClickOut","taskContent","length","pop","handleOptionsClick","createNewTask","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","onClick","map","item","type","autoFocus","rows","placeholder","e","disabled","id","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\n\nexport default function TaskList() {\n\n  const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n  const[checked, setChecked]= useState(false)\n  const [optionsDisplayed, setOptionsDisplayed]=useState(true)\n  const[title,setTitle]=useState('Title')\n  const[editModeDisplayed, setEditModeDisplayed]=useState(false)\n\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems]\n    newListItems[index] = event.target.value\n    setListItems(newListItems)\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`; \n    \n  }\n  function handleTitleChange(event){\n    setTitle(event.target.value)\n  }\n\n  function handleCheckBoxChange(event,index){\n    const currCheckbox=event.target.value\n    setChecked()\n\n  }\n\n  function handleUserClickOut(event,index){\n    const taskContent=event.target.value\n    if (taskContent.length===0){\n      const newListItems=[...listItems]\n      newListItems.pop(index)\n      setListItems(newListItems)\n    }\n  }\n\n  function handleOptionsClick(event){\n    setOptionsDisplayed(!optionsDisplayed)\n  }\n\n  function createNewTask(event) {\n    const text = event.target.value\n    setListItems([...listItems, text])\n  }\n  \n\n\n  return (\n    <>\n      <EditListMode/>\n      <div className=\"TaskList\">\n        <div className='list-header'>      \n          <input value={title} onChange={(event)=>{handleTitleChange(event)}} className=\"list-name\"></input>\n          <button onClick={(event)=>{handleOptionsClick(event)}}>edit</button>\n          </div>\n\n          {optionsDisplayed && <ListOptions editModeDisplayed={editModeDisplayed} setEditModeDisplayed={setEditModeDisplayed}/>}\n        <ul>\n          {listItems.map((item, index) => (\n            <li key={index}>\n              <input \n                type= 'checkbox'\n                checked={checked} //checked left= if box is checked or not, checked right= variable storing T/F for checked\n                onChange={(event) => {handleCheckBoxChange(event, index)}} className=\"task\" autoFocus />\n                {/* <textarea rows=\"1\" onBlur={(event)=>{handleUserClickOut(event,index)}}  onChange={(event) => {handleTaskChange(event, index)}} className=\"task\" autoFocus /> */}\n                <div>{item}</div>\n            </li>\n          ))}\n          <li>\n            <textarea rows=\"1\" value={\"\"} placeholder='+ New Task' onClick={(e) => createNewTask(e)} /> \n            <input \n                disabled='true'\n                type= 'checkbox'\n                id='invisible-checkbox'\n                />\n          </li>\n        </ul>\n\n      </div>\n    </>\n  );\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}