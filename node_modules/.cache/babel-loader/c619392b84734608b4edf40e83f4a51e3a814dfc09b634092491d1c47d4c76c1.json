{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx\";\nimport React, { useState } from 'react';\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList({\n  index,\n  taskLists,\n  setTaskLists\n}) {\n  // const[listItems, setListItems] = useState(['task 1 task 1 task 1 ','task 2','task 3 ', 'task 4']) //[ declared thing, how you set it to something/override]\n  // const [checkedItems, setCheckedItems] = useState([])\n  // // const[checked, setChecked] = useState(false)\n  // const[optionsDisplayed, setOptionsDisplayed]=useState(false)\n  // const[title,setTitle] = useState('Title')\n  // const[editModeDisplayed, setEditModeDisplayed]=useState(false)\n  function handleChangeTaskState(index, key, value) {\n    const newTaskLists = [...taskLists];\n    newTaskLists[index][key] = value;\n    setTaskLists(newTaskLists);\n  }\n\n  // function handleTaskChange(event, index) {\n  //   const newListItems = [...listItems]\n  //   newListItems[index] = event.target.value\n  //   setListItems(newListItems)\n  //   event.target.style.height = '1em';\n  //   event.target.style.height = `${event.target.scrollHeight}px`; \n\n  // }\n  // function handleTitleChange(event){\n  //   setTitle(event.target.value)\n  // }\n\n  function handleCheckBoxChange(event, index, item) {\n    const currCheckbox = event.target.value;\n    // setChecked()\n    const newListItems = [...listItems];\n    newListItems.splice(index, 1);\n    const newCheckedItems = [...checkedItems, item];\n    // const newListItems = listItems.filter((item, i) => i !== index)\n\n    setCheckedItems(newCheckedItems);\n    setListItems(newListItems);\n  }\n  function handleOptionsClick(event) {\n    setOptionsDisplayed(!optionsDisplayed);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [editModeDisplayed && /*#__PURE__*/_jsxDEV(EditListMode, {\n      listItems: listItems,\n      setListItems: setListItems,\n      setTitle: setTitle,\n      title: title,\n      setEditModeDisplayed: setEditModeDisplayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"list-name\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleOptionsClick(event);\n          },\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), optionsDisplayed && /*#__PURE__*/_jsxDEV(ListOptions, {\n        setEditModeDisplayed: setEditModeDisplayed,\n        setOptionsDisplayed: setOptionsDisplayed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-items-container\",\n        children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: false,\n            onChange: event => {\n              handleCheckBoxChange(event, index, item);\n            },\n            className: \"task\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"displayed-task\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), checkedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: true,\n            checked: true,\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"displayed-task\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, index + listItems.length, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","ListOptions","EditListMode","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","index","taskLists","setTaskLists","handleChangeTaskState","key","value","newTaskLists","handleCheckBoxChange","event","item","currCheckbox","target","newListItems","listItems","splice","newCheckedItems","checkedItems","setCheckedItems","setListItems","handleOptionsClick","setOptionsDisplayed","optionsDisplayed","createNewTask","text","children","editModeDisplayed","setTitle","title","setEditModeDisplayed","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","type","checked","onChange","autoFocus","disabled","length","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\n\nexport default function TaskList({index, taskLists, setTaskLists}) {\n\n  // const[listItems, setListItems] = useState(['task 1 task 1 task 1 ','task 2','task 3 ', 'task 4']) //[ declared thing, how you set it to something/override]\n  // const [checkedItems, setCheckedItems] = useState([])\n  // // const[checked, setChecked] = useState(false)\n  // const[optionsDisplayed, setOptionsDisplayed]=useState(false)\n  // const[title,setTitle] = useState('Title')\n  // const[editModeDisplayed, setEditModeDisplayed]=useState(false)\n  function handleChangeTaskState(index, key, value) {\n    const newTaskLists = [...taskLists]\n    newTaskLists[index][key] = value\n    setTaskLists(newTaskLists)\n  }\n\n  // function handleTaskChange(event, index) {\n  //   const newListItems = [...listItems]\n  //   newListItems[index] = event.target.value\n  //   setListItems(newListItems)\n  //   event.target.style.height = '1em';\n  //   event.target.style.height = `${event.target.scrollHeight}px`; \n    \n  // }\n  // function handleTitleChange(event){\n  //   setTitle(event.target.value)\n  // }\n\n  function handleCheckBoxChange(event,index,item){\n    const currCheckbox=event.target.value\n    // setChecked()\n    const newListItems = [...listItems]\n    newListItems.splice(index,1);\n    const newCheckedItems = [...checkedItems, item]\n    // const newListItems = listItems.filter((item, i) => i !== index)\n    \n    setCheckedItems(newCheckedItems)\n    setListItems(newListItems)\n\n  }\n\n  function handleOptionsClick(event){\n    setOptionsDisplayed(!optionsDisplayed)\n  }\n\n  function createNewTask(event) {\n    const text = event.target.value\n    setListItems([...listItems, text])\n  }\n  \n\n\n  return (\n    <>\n      {editModeDisplayed&&<EditListMode \n        listItems={listItems}\n        setListItems={setListItems}\n        setTitle={setTitle}\n        title={title}\n        setEditModeDisplayed={setEditModeDisplayed}\n      />}\n      <div className=\"task-list\">\n        <div className='list-header'>      \n          <h1 className=\"list-name\">{title}</h1> \n          {/* make title not an input not working */}\n          <button onClick={(event)=>{handleOptionsClick(event)}}>edit</button>\n          </div>\n          <hr></hr>\n\n          {optionsDisplayed && <ListOptions setEditModeDisplayed={setEditModeDisplayed} setOptionsDisplayed={setOptionsDisplayed}/>}\n        <ul className=\"list-items-container\">\n          {listItems.map((item, index) => (\n            <li className='task-container' key={index}>\n              <input \n                type= 'checkbox'\n                checked={false}\n                onChange={(event) => {handleCheckBoxChange(event, index,item)}} className=\"task\" autoFocus />\n                <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n          <h3>Completed</h3>\n          {checkedItems.map((item, index) => (\n            <li className='task-container' key={index + listItems.length}>\n              \n              <input type='checkbox' disabled={true} checked={true} className=\"task\" />\n              <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n        </ul>\n\n      </div>\n    </>\n  );\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}