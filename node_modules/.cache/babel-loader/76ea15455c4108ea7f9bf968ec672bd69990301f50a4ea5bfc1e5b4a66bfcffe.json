{"ast":null,"code":"import TaskList from\"./TaskList\";import\"../styles/AllTaskLists.css\";import{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AllTaskLists(){const[taskLists,setTaskLists]=useState([{title:\"Task List 1\",currentItems:[\"Task 1\"],completedItems:[\"Task 2\"],editModeDisplayed:false,optionsDisplayed:false},{title:\"Task List 2\",currentItems:[\"Task 3\"],completedItems:[\"Task 4\"],editModeDisplayed:false,optionsDisplayed:false}]);function handleNewList(){setTaskLists([...taskLists,{name:\"Title\",currentItems:[],completedItems:[],editModeDisplayed:true,optionsDisplayed:false}]);}return/*#__PURE__*/_jsxs(\"div\",{className:\"lists-container\",children:[taskLists.map((taskList,index)=>{return/*#__PURE__*/_jsx(TaskList,{listIndex:index,taskLists:taskLists,setTaskLists:setTaskLists});}),/*#__PURE__*/_jsx(\"button\",{onClick:event=>{handleNewList(event);},children:\"New List\"})]});}","map":{"version":3,"names":["TaskList","useState","jsx","_jsx","jsxs","_jsxs","AllTaskLists","taskLists","setTaskLists","title","currentItems","completedItems","editModeDisplayed","optionsDisplayed","handleNewList","name","className","children","map","taskList","index","listIndex","onClick","event"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx"],"sourcesContent":["import TaskList from \"./TaskList\"\nimport \"../styles/AllTaskLists.css\"\nimport { useState } from \"react\"\n\nexport default function AllTaskLists() {\n  const [taskLists, setTaskLists] = useState([\n    {\n      title: \"Task List 1\",\n      currentItems: [\n        \"Task 1\",\n      ],\n      completedItems: [\n        \"Task 2\",\n      ],\n      editModeDisplayed: false,\n      optionsDisplayed: false,\n    },\n    {\n      title: \"Task List 2\",\n      currentItems: [\n        \"Task 3\",\n      ],\n      completedItems: [\n        \"Task 4\",\n      ],\n      editModeDisplayed: false,\n      optionsDisplayed: false,\n    },\n  ])\n\n  function handleNewList() {\n    setTaskLists([\n      ...taskLists,\n      {\n        name: \"Title\",\n        currentItems: [],\n        completedItems: [],\n        editModeDisplayed: true,\n        optionsDisplayed: false,\n      }\n    ])\n  }\n\n\n\n  return (\n    <div className=\"lists-container\">\n\n      {taskLists.map((taskList, index) => {\n        return (\n          <TaskList\n            listIndex={index}\n            taskLists={taskLists}\n            setTaskLists={setTaskLists}\n          />\n        )\n      })}\n      <button onClick={(event)=>{handleNewList(event)}}>New List</button>\n      {/* <TaskList/>\n      <TaskList/> */}\n      {/* <button className=\"add-list-button\" onClick={() => handleAddTask}>Add Task</button> */}\n    </div>\n  )\n}"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,YAAY,CACjC,MAAO,4BAA4B,CACnC,OAASC,QAAQ,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,cAAe,SAAS,CAAAC,YAAYA,CAAA,CAAG,CACrC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,CACzC,CACEQ,KAAK,CAAE,aAAa,CACpBC,YAAY,CAAE,CACZ,QAAQ,CACT,CACDC,cAAc,CAAE,CACd,QAAQ,CACT,CACDC,iBAAiB,CAAE,KAAK,CACxBC,gBAAgB,CAAE,KACpB,CAAC,CACD,CACEJ,KAAK,CAAE,aAAa,CACpBC,YAAY,CAAE,CACZ,QAAQ,CACT,CACDC,cAAc,CAAE,CACd,QAAQ,CACT,CACDC,iBAAiB,CAAE,KAAK,CACxBC,gBAAgB,CAAE,KACpB,CAAC,CACF,CAAC,CAEF,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACvBN,YAAY,CAAC,CACX,GAAGD,SAAS,CACZ,CACEQ,IAAI,CAAE,OAAO,CACbL,YAAY,CAAE,EAAE,CAChBC,cAAc,CAAE,EAAE,CAClBC,iBAAiB,CAAE,IAAI,CACvBC,gBAAgB,CAAE,KACpB,CAAC,CACF,CAAC,CACJ,CAIA,mBACER,KAAA,QAAKW,SAAS,CAAC,iBAAiB,CAAAC,QAAA,EAE7BV,SAAS,CAACW,GAAG,CAAC,CAACC,QAAQ,CAAEC,KAAK,GAAK,CAClC,mBACEjB,IAAA,CAACH,QAAQ,EACPqB,SAAS,CAAED,KAAM,CACjBb,SAAS,CAAEA,SAAU,CACrBC,YAAY,CAAEA,YAAa,CAC5B,CAAC,CAEN,CAAC,CAAC,cACFL,IAAA,WAAQmB,OAAO,CAAGC,KAAK,EAAG,CAACT,aAAa,CAACS,KAAK,CAAC,EAAE,CAAAN,QAAA,CAAC,UAAQ,CAAQ,CAAC,EAIhE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}