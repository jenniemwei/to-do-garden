{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/EditListMode.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, {useState} from 'react'\nexport default function EditListMode() {\n  _s();\n  const [listItems, setListItems] = useState([]); //[ declared thing, how you set it to something/override]\n  const [checked, setChecked] = useState(false);\n  const [displayed, setDisplayed] = useState(true);\n  const [title, setTitle] = useState('Title');\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleCheckBoxChange(event, index) {\n    const currCheckbox = event.target.value;\n    setChecked();\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    if (taskContent.length === 0) {\n      const newListItems = [...listItems];\n      newListItems.pop(index);\n      setListItems(newListItems);\n    }\n  }\n  function handleOptionsClick(event) {\n    setDisplayed(!displayed);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => {\n          handleTitleChange(event);\n        },\n        className: \"list-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          handleOptionsClick(event);\n        },\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), displayed && /*#__PURE__*/_jsxDEV(ListOptions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checked //checked left= if box is checked or not, checked right= variable storing T/F for checked\n          ,\n          onChange: event => {\n            handleCheckBoxChange(event, index);\n          },\n          className: \"task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"1\",\n          onBlur: event => {\n            handleUserClickOut(event, index);\n          },\n          onChange: event => {\n            handleTaskChange(event, index);\n          },\n          className: \"task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"1\",\n          value: \"\",\n          placeholder: \"+ New Task\",\n          onClick: e => createNewTask(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: \"true\",\n          type: \"checkbox\",\n          id: \"invisible-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_s(EditListMode, \"V2vSs8UR/hoVI5AUbMGauSArZ6M=\");\n_c = EditListMode;\nvar _c;\n$RefreshReg$(_c, \"EditListMode\");","map":{"version":3,"names":["EditListMode","_s","listItems","setListItems","useState","checked","setChecked","displayed","setDisplayed","title","setTitle","handleTaskChange","event","index","newListItems","target","value","style","height","scrollHeight","handleTitleChange","handleCheckBoxChange","currCheckbox","handleUserClickOut","taskContent","length","pop","handleOptionsClick","createNewTask","text","_jsxDEV","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ListOptions","map","item","type","autoFocus","rows","onBlur","placeholder","e","disabled","id","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/EditListMode.jsx"],"sourcesContent":["// import React, {useState} from 'react'\nexport default function EditListMode() {\n\n    const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n    const[checked, setChecked]= useState(false)\n    const [displayed, setDisplayed]=useState(true)\n    const[title,setTitle]=useState('Title')\n  \n    function handleTaskChange(event, index) {\n      const newListItems = [...listItems]\n      newListItems[index] = event.target.value\n      setListItems(newListItems)\n      event.target.style.height = '1em';\n      event.target.style.height = `${event.target.scrollHeight}px`; \n      \n    }\n    function handleTitleChange(event){\n      setTitle(event.target.value)\n    }\n  \n    function handleCheckBoxChange(event,index){\n      const currCheckbox=event.target.value\n      setChecked()\n  \n    }\n  \n    function handleUserClickOut(event,index){\n      const taskContent=event.target.value\n      if (taskContent.length===0){\n        const newListItems=[...listItems]\n        newListItems.pop(index)\n        setListItems(newListItems)\n      }\n    }\n  \n    function handleOptionsClick(event){\n      setDisplayed(!displayed)\n    }\n  \n    function createNewTask(event) {\n      const text = event.target.value\n      setListItems([...listItems, text])\n  \n    }\n  \n  \n    return (\n      <div className=\"TaskList\">\n        <div className='list-header'>      \n          <input value={title} onChange={(event)=>{handleTitleChange(event)}} className=\"list-name\"></input>\n          <button onClick={(event)=>{handleOptionsClick(event)}}>edit</button>\n          </div>\n  \n          {displayed && <ListOptions/>}\n        <ul>\n          {listItems.map((item, index) => (\n            <li key={index}>\n              <input \n                type= 'checkbox'\n                checked={checked} //checked left= if box is checked or not, checked right= variable storing T/F for checked\n                onChange={(event) => {handleCheckBoxChange(event, index)}} className=\"task\" autoFocus />\n                <textarea rows=\"1\" onBlur={(event)=>{handleUserClickOut(event,index)}}  onChange={(event) => {handleTaskChange(event, index)}} className=\"task\" autoFocus />\n            </li>\n          ))}\n          <li>\n            <textarea rows=\"1\" value={\"\"} placeholder='+ New Task' onClick={(e) => createNewTask(e)} /> \n            <input \n                disabled='true'\n                type= 'checkbox'\n                id='invisible-checkbox'\n                />\n          </li>\n        </ul>\n  \n      </div>\n    );\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}