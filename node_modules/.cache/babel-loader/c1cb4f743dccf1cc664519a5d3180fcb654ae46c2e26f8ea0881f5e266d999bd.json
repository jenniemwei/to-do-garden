{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const [listItems, setListItems] = useState(['task 1 task 1 task 1 ', 'task 2', 'task 3 ', 'task 4']); //[ declared thing, how you set it to something/override]\n  const [checkedItems, setCheckedItems] = useState([]);\n  // const[checked, setChecked] = useState(false)\n  const [optionsDisplayed, setOptionsDisplayed] = useState(false);\n  const [title, setTitle] = useState('Title');\n  const [editModeDisplayed, setEditModeDisplayed] = useState(false);\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleCheckBoxChange(event, index, item) {\n    const currCheckbox = event.target.value;\n    // setChecked()\n    const newCheckedItems = [...checkedItems, item];\n    const newListItems = listItems.filter((item, i) => i !== index);\n    setCheckedItems(newCheckedItems);\n    setListItems(newListItems);\n  }\n  function handleOptionsClick(event) {\n    setOptionsDisplayed(!optionsDisplayed);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [editModeDisplayed && /*#__PURE__*/_jsxDEV(EditListMode, {\n      listItems: listItems,\n      setListItems: setListItems,\n      setTitle: setTitle,\n      title: title,\n      setEditModeDisplayed: setEditModeDisplayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"list-name\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleOptionsClick(event);\n          },\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), optionsDisplayed && /*#__PURE__*/_jsxDEV(ListOptions, {\n        setEditModeDisplayed: setEditModeDisplayed,\n        setOptionsDisplayed: setOptionsDisplayed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-items-container\",\n        children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: false,\n            onChange: event => {\n              handleCheckBoxChange(event, index, item);\n            },\n            className: \"task\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"displayed-task\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), checkedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: true,\n            checked: true,\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"displayed-task\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, index + listItems.length, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n_s(TaskList, \"OzHsINQHpm3S/8KeAhJJX+TGTOM=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","ListOptions","EditListMode","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","listItems","setListItems","checkedItems","setCheckedItems","optionsDisplayed","setOptionsDisplayed","title","setTitle","editModeDisplayed","setEditModeDisplayed","handleTaskChange","event","index","newListItems","target","value","style","height","scrollHeight","handleTitleChange","handleCheckBoxChange","item","currCheckbox","newCheckedItems","filter","i","handleOptionsClick","createNewTask","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","type","checked","onChange","autoFocus","disabled","length","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\n\nexport default function TaskList() {\n\n  const[listItems, setListItems] = useState(['task 1 task 1 task 1 ','task 2','task 3 ', 'task 4']) //[ declared thing, how you set it to something/override]\n  const [checkedItems, setCheckedItems] = useState([])\n  // const[checked, setChecked] = useState(false)\n  const[optionsDisplayed, setOptionsDisplayed]=useState(false)\n  const[title,setTitle] = useState('Title')\n  const[editModeDisplayed, setEditModeDisplayed]=useState(false)\n\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems]\n    newListItems[index] = event.target.value\n    setListItems(newListItems)\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`; \n    \n  }\n  function handleTitleChange(event){\n    setTitle(event.target.value)\n  }\n\n  function handleCheckBoxChange(event,index,item){\n    const currCheckbox=event.target.value\n    // setChecked()\n    const newCheckedItems = [...checkedItems, item]\n    const newListItems = listItems.filter((item, i) => i !== index)\n    setCheckedItems(newCheckedItems)\n    setListItems(newListItems)\n\n  }\n\n  function handleOptionsClick(event){\n    setOptionsDisplayed(!optionsDisplayed)\n  }\n\n  function createNewTask(event) {\n    const text = event.target.value\n    setListItems([...listItems, text])\n  }\n  \n\n\n  return (\n    <>\n      {editModeDisplayed&&<EditListMode \n        listItems={listItems}\n        setListItems={setListItems}\n        setTitle={setTitle}\n        title={title}\n        setEditModeDisplayed={setEditModeDisplayed}\n      />}\n      <div className=\"task-list\">\n        <div className='list-header'>      \n          <h1 className=\"list-name\">{title}</h1> \n          {/* make title not an input not working */}\n          <button onClick={(event)=>{handleOptionsClick(event)}}>edit</button>\n          </div>\n          <hr></hr>\n\n          {optionsDisplayed && <ListOptions setEditModeDisplayed={setEditModeDisplayed} setOptionsDisplayed={setOptionsDisplayed}/>}\n        <ul className=\"list-items-container\">\n          {listItems.map((item, index) => (\n            <li className='task-container' key={index}>\n              <input \n                type= 'checkbox'\n                checked={false}\n                onChange={(event) => {handleCheckBoxChange(event, index,item)}} className=\"task\" autoFocus />\n                <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n          <h3>Completed</h3>\n          {checkedItems.map((item, index) => (\n            <li className='task-container' key={index + listItems.length}>\n              \n              <input type='checkbox' disabled={true} checked={true} className=\"task\" />\n              <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n        </ul>\n\n      </div>\n    </>\n  );\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAC5B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEjC,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,uBAAuB,EAAC,QAAQ,EAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAC;EAClG,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,MAAK,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAACd,QAAQ,CAAC,KAAK,CAAC;EAC5D,MAAK,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAK,CAACiB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAClB,QAAQ,CAAC,KAAK,CAAC;EAE9D,SAASmB,gBAAgBA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACtC,MAAMC,YAAY,GAAG,CAAC,GAAGb,SAAS,CAAC;IACnCa,YAAY,CAACD,KAAK,CAAC,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK;IACxCd,YAAY,CAACY,YAAY,CAAC;IAC1BF,KAAK,CAACG,MAAM,CAACE,KAAK,CAACC,MAAM,GAAG,KAAK;IACjCN,KAAK,CAACG,MAAM,CAACE,KAAK,CAACC,MAAM,GAAI,GAAEN,KAAK,CAACG,MAAM,CAACI,YAAa,IAAG;EAE9D;EACA,SAASC,iBAAiBA,CAACR,KAAK,EAAC;IAC/BJ,QAAQ,CAACI,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B;EAEA,SAASK,oBAAoBA,CAACT,KAAK,EAACC,KAAK,EAACS,IAAI,EAAC;IAC7C,MAAMC,YAAY,GAACX,KAAK,CAACG,MAAM,CAACC,KAAK;IACrC;IACA,MAAMQ,eAAe,GAAG,CAAC,GAAGrB,YAAY,EAAEmB,IAAI,CAAC;IAC/C,MAAMR,YAAY,GAAGb,SAAS,CAACwB,MAAM,CAAC,CAACH,IAAI,EAAEI,CAAC,KAAKA,CAAC,KAAKb,KAAK,CAAC;IAC/DT,eAAe,CAACoB,eAAe,CAAC;IAChCtB,YAAY,CAACY,YAAY,CAAC;EAE5B;EAEA,SAASa,kBAAkBA,CAACf,KAAK,EAAC;IAChCN,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EACxC;EAEA,SAASuB,aAAaA,CAAChB,KAAK,EAAE;IAC5B,MAAMiB,IAAI,GAAGjB,KAAK,CAACG,MAAM,CAACC,KAAK;IAC/Bd,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE4B,IAAI,CAAC,CAAC;EACpC;EAIA,oBACEjC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,GACGrB,iBAAiB,iBAAEb,OAAA,CAACF,YAAY;MAC/BO,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BM,QAAQ,EAAEA,QAAS;MACnBD,KAAK,EAAEA,KAAM;MACbG,oBAAoB,EAAEA;IAAqB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFtC,OAAA;MAAKuC,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACxBlC,OAAA;QAAKuC,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAC1BlC,OAAA;UAAIuC,SAAS,EAAC,WAAW;UAAAL,QAAA,EAAEvB;QAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEtCtC,OAAA;UAAQwC,OAAO,EAAGxB,KAAK,IAAG;YAACe,kBAAkB,CAACf,KAAK,CAAC;UAAA,CAAE;UAAAkB,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACNtC,OAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAER7B,gBAAgB,iBAAIT,OAAA,CAACH,WAAW;QAACiB,oBAAoB,EAAEA,oBAAqB;QAACJ,mBAAmB,EAAEA;MAAoB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3HtC,OAAA;QAAIuC,SAAS,EAAC,sBAAsB;QAAAL,QAAA,GACjC7B,SAAS,CAACoC,GAAG,CAAC,CAACf,IAAI,EAAET,KAAK,kBACzBjB,OAAA;UAAIuC,SAAS,EAAC,gBAAgB;UAAAL,QAAA,gBAC5BlC,OAAA;YACE0C,IAAI,EAAE,UAAU;YAChBC,OAAO,EAAE,KAAM;YACfC,QAAQ,EAAG5B,KAAK,IAAK;cAACS,oBAAoB,CAACT,KAAK,EAAEC,KAAK,EAACS,IAAI,CAAC;YAAA,CAAE;YAACa,SAAS,EAAC,MAAM;YAACM,SAAS;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7FtC,OAAA;YAAGuC,SAAS,EAAC,gBAAgB;YAAAL,QAAA,EAAER;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GALRrB,KAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMrC,CACL,CAAC,eACFtC,OAAA;UAAAkC,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjB/B,YAAY,CAACkC,GAAG,CAAC,CAACf,IAAI,EAAET,KAAK,kBAC5BjB,OAAA;UAAIuC,SAAS,EAAC,gBAAgB;UAAAL,QAAA,gBAE5BlC,OAAA;YAAO0C,IAAI,EAAC,UAAU;YAACI,QAAQ,EAAE,IAAK;YAACH,OAAO,EAAE,IAAK;YAACJ,SAAS,EAAC;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzEtC,OAAA;YAAGuC,SAAS,EAAC,gBAAgB;YAAAL,QAAA,EAAER;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAHNrB,KAAK,GAAGZ,SAAS,CAAC0C,MAAM;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIxD,CACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC;EAAA,eACN,CAAC;AAEP;AACA;AAAAlC,EAAA,CApFwBD,QAAQ;AAAA6C,EAAA,GAAR7C,QAAQ;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}