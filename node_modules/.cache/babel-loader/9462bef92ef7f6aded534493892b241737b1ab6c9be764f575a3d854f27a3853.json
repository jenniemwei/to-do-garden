{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/EditListMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ListOptions from './ListOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditListMode({\n  setListItems,\n  setTitle,\n  title,\n  listItems,\n  setEditModeDisplayed\n}) {\n  _s();\n  // const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n  // const [displayed, setDisplayed]=useState(true)\n  console.log(listItems);\n  // const[title,setTitle]=useState('Title')\n  const listRef = useRef([]);\n  useEffect(() => {\n    listRef.current = listRef.current.slice(0, listItems.length);\n    listRef.current.forEach((item, index) => {\n      if (item) {\n        item.style.height = '1em';\n        item.style.height = `${item.scrollHeight}px`;\n      }\n    });\n  }, [listItems]);\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    console.log(\"CLICKED OUT\");\n    if (taskContent.length === 0) {\n      const newListItems = [...listItems];\n      newListItems.pop(index);\n      setListItems(newListItems);\n    }\n  }\n  function handleCloseEditMode(event) {\n    setEditModeDisplayed(false);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  // function handleDone(event){\n  //   setListItems(listItems)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-mode-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskList edit-mode\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: event => {\n            handleTitleChange(event);\n          },\n          className: \"list-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleCloseEditMode(event);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            value: item,\n            onBlur: event => {\n              handleUserClickOut(event, index);\n            },\n            onChange: event => {\n              handleTaskChange(event, index);\n            },\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            placeholder: \"+ New Task\",\n            onClick: e => createNewTask(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: true,\n            type: \"checkbox\",\n            id: \"invisible-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n_s(EditListMode, \"84n7gRvM2a8Nl9i4H/fLGxCIUPc=\");\n_c = EditListMode;\nvar _c;\n$RefreshReg$(_c, \"EditListMode\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ListOptions","jsxDEV","_jsxDEV","EditListMode","setListItems","setTitle","title","listItems","setEditModeDisplayed","_s","console","log","listRef","current","slice","length","forEach","item","index","style","height","scrollHeight","handleTaskChange","event","newListItems","target","value","handleTitleChange","handleUserClickOut","taskContent","pop","handleCloseEditMode","createNewTask","text","id","children","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","disabled","rows","onBlur","placeholder","e","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/EditListMode.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport ListOptions from './ListOptions'\n\n\nexport default function EditListMode({ setListItems, setTitle, title, listItems, setEditModeDisplayed }) {\n\n    // const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n    // const [displayed, setDisplayed]=useState(true)\n    console.log(listItems);\n    // const[title,setTitle]=useState('Title')\n    const listRef = useRef([]);\n\n    useEffect(() => {\n      listRef.current = listRef.current.slice(0, listItems.length);\n      listRef.current.forEach((item, index) => {\n        if (item) {\n          item.style.height = '1em';\n          item.style.height = `${item.scrollHeight}px`;\n        }\n      });\n    }, [listItems]);\n  \n    function handleTaskChange(event, index) {\n      const newListItems = [...listItems]\n      newListItems[index] = event.target.value\n      setListItems(newListItems)\n      event.target.style.height = '1em';\n      event.target.style.height = `${event.target.scrollHeight}px`; \n      \n    }\n    function handleTitleChange(event){\n      setTitle(event.target.value)\n    }\n  \n  \n    function handleUserClickOut(event,index){\n      const taskContent=event.target.value\n      console.log(\"CLICKED OUT\")\n      if (taskContent.length===0){\n        const newListItems=[...listItems]\n        newListItems.pop(index)\n        setListItems(newListItems)\n      }\n    }\n    function handleCloseEditMode(event){\n      setEditModeDisplayed(false)\n\n    }\n  \n    function createNewTask(event) {\n      const text = event.target.value\n      setListItems([...listItems, text])\n    }\n    // function handleDone(event){\n    //   setListItems(listItems)\n    // }\n    \n    return (\n      <div id=\"edit-mode-container\" >\n      <div className=\"TaskList edit-mode\">\n        <div className='list-header'>      \n          <input value={title} onChange={(event)=>{handleTitleChange(event)}} className=\"list-name\"></input>\n          <button onClick={(event)=>{handleCloseEditMode(event)}}>Close</button>\n          </div>\n  \n        <ul>\n          {listItems.map((item, index) => (\n            <li key={index}>\n              <input \n                type= 'checkbox' disabled={true}/>\n              <textarea \n                rows=\"1\" \n                value={item}\n                onBlur={(event) => {handleUserClickOut(event,index)}}  \n                onChange={(event) => {handleTaskChange(event, index)}} \n                className=\"task\"\n              />\n            </li>\n          ))}\n          <li>\n            <textarea \n              rows=\"1\" \n              placeholder='+ New Task' \n              onClick={(e) => createNewTask(e)} \n            /> \n            <input \n              disabled={true}\n              type= 'checkbox'\n              id='invisible-checkbox'\n            />\n          </li>\n        </ul>\n        {/* <button onClick={(event)=>{handleDone(event)}}>Save</button> */}\n  \n      </div>\n      </div>\n\n    );\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}