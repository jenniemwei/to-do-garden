{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import ListOptions from\"./ListOptions\";import{X}from\"react-feather\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EditListMode(_ref){let{taskLists,handleChangeTaskState,listIndex}=_ref;const currentTitle=taskLists[listIndex].title;//editing title that doesn't change taskLists state until save button is clicked\nconst[editingTitle,setEditingTitle]=useState(currentTitle);const listItems=taskLists[listIndex].currentItems;//editing list that doesn't change taskLists state until save button is clicked\nconst[editingList,setEditingList]=useState([...listItems]);const listRef=useRef([]);useEffect(()=>{const size=listRef.current.length;if(size>0&&listRef.current[size-1]!==null){listRef.current[size-1].focus();//focuses on recently created task\n}},[editingList.length]);//handles change in task content in editing list\nfunction handleTaskChange(event,index){const newListItems=[...editingList];newListItems[index]=event.target.value;setEditingList(newListItems);// resizes text area to fit typed content\nevent.target.style.height=\"1em\";event.target.style.height=\"\".concat(event.target.scrollHeight,\"px\");}function handleTitleChange(event){// resizes text area to fit typed title\nevent.target.style.height=\"1em\";event.target.style.height=\"\".concat(event.target.scrollHeight,\"px\");setEditingTitle(event.target.value);}function handleUserClickOut(event,index){const taskContent=event.target.value;if(taskContent.length===0){console.log(\"EMPTY TASK\");const newEditingList=[...editingList];newEditingList.pop(index);setEditingList(newEditingList);}}//closes edit mode when user clicks on close button by setting editModeDisplayed to false\nfunction handleCloseEditMode(event){handleChangeTaskState(listIndex,\"editModeDisplayed\",false);}//creates new task in the editing list when user clicks on + New Task\nfunction createNewTask(event){const text=event.target.value;setEditingList([...editingList,text]);}//saves editing list and title to taskLists state\nfunction handleSave(event){handleChangeTaskState(listIndex,\"editModeDisplayed\",false);handleChangeTaskState(listIndex,\"currentItems\",editingList);handleChangeTaskState(listIndex,\"title\",editingTitle);}return/*#__PURE__*/_jsx(\"div\",{id:\"edit-mode-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\" edit-mode\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-header\",children:[/*#__PURE__*/_jsx(\"textarea\",{rows:\"1\",className:\"title-input list-title\",value:editingTitle,placeholder:\"Title\",onChange:event=>{handleTitleChange(event);}}),/*#__PURE__*/_jsx(\"button\",{onClick:event=>{handleCloseEditMode(event);},\"aria-label\":\"close edit list popup\",className:\"close-button\",children:/*#__PURE__*/_jsx(X,{size:\"30\",color:\"gray\"})})]}),/*#__PURE__*/_jsxs(\"ul\",{children:[editingList.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",disabled:true}),/*#__PURE__*/_jsx(\"textarea\",{className:\" task-text\",rows:\"1\",value:item,ref:el=>listRef.current=[...listRef.current,el],onBlur:event=>{handleUserClickOut(event,index);},onChange:event=>{handleTaskChange(event,index);}})]},index)),/*#__PURE__*/_jsxs(\"button\",{className:\"task-container new-task task-text\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:e=>createNewTask(e),children:\"+ New Task\"}),/*#__PURE__*/_jsx(\"input\",{disabled:true,type:\"checkbox\",id:\"invisible-checkbox\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"blue-button\",onClick:event=>{handleSave(event);},children:\"Save\"})]})});}","map":{"version":3,"names":["React","useState","useRef","useEffect","ListOptions","X","jsx","_jsx","jsxs","_jsxs","EditListMode","_ref","taskLists","handleChangeTaskState","listIndex","currentTitle","title","editingTitle","setEditingTitle","listItems","currentItems","editingList","setEditingList","listRef","size","current","length","focus","handleTaskChange","event","index","newListItems","target","value","style","height","concat","scrollHeight","handleTitleChange","handleUserClickOut","taskContent","console","log","newEditingList","pop","handleCloseEditMode","createNewTask","text","handleSave","id","children","className","rows","placeholder","onChange","onClick","color","map","item","type","disabled","ref","el","onBlur","e"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/EditListMode.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport ListOptions from \"./ListOptions\";\nimport { X } from \"react-feather\";\n\nexport default function EditListMode({\n  taskLists,\n  handleChangeTaskState,\n  listIndex,\n}) {\n\n  const currentTitle = taskLists[listIndex].title;\n  //editing title that doesn't change taskLists state until save button is clicked\n  const [editingTitle, setEditingTitle] = useState(currentTitle);\n  const listItems = taskLists[listIndex].currentItems;\n  //editing list that doesn't change taskLists state until save button is clicked\n  const [editingList, setEditingList] = useState([...listItems]);\n\n  const listRef = useRef([]);\n\n  useEffect(() => {\n    const size = listRef.current.length;\n    if (size > 0 && listRef.current[size - 1] !== null) {\n      listRef.current[size - 1].focus(); //focuses on recently created task\n    }\n  }, [editingList.length]);\n//handles change in task content in editing list\n  function handleTaskChange(event, index) {\n    const newListItems = [...editingList];\n    newListItems[index] = event.target.value;\n    setEditingList(newListItems);\n    // resizes text area to fit typed content\n    event.target.style.height = \"1em\";\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    // resizes text area to fit typed title\n    event.target.style.height = \"1em\";\n    event.target.style.height = `${event.target.scrollHeight}px`;\n    setEditingTitle(event.target.value);\n  }\n\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    if (taskContent.length === 0) {\n      console.log(\"EMPTY TASK\");\n      const newEditingList = [...editingList];\n      newEditingList.pop(index);\n      setEditingList(newEditingList);\n    }\n  }\n  //closes edit mode when user clicks on close button by setting editModeDisplayed to false\n  function handleCloseEditMode(event) {\n    handleChangeTaskState(listIndex, \"editModeDisplayed\", false);\n  }\n//creates new task in the editing list when user clicks on + New Task\n  function createNewTask(event) {\n    const text = event.target.value;\n    setEditingList([...editingList, text]);\n  }\n\n  //saves editing list and title to taskLists state\n  function handleSave(event) {\n    handleChangeTaskState(listIndex, \"editModeDisplayed\", false);\n    handleChangeTaskState(listIndex, \"currentItems\", editingList);\n    handleChangeTaskState(listIndex, \"title\", editingTitle);\n  }\n\n  return (\n    <div id=\"edit-mode-container\">\n      <div className=\" edit-mode\">\n        <div className=\"list-header\">\n          <textarea\n            rows=\"1\"\n            className=\"title-input list-title\"\n            value={editingTitle}\n            placeholder=\"Title\"\n            onChange={(event) => {\n              handleTitleChange(event);\n            }}\n          ></textarea>\n          <button\n            onClick={(event) => {\n              handleCloseEditMode(event);\n            }}\n            aria-label=\"close edit list popup\"\n            className=\"close-button\"\n          >\n            <X size=\"30\" color=\"gray\" />\n          </button>\n        </div>\n        <ul>\n          {editingList.map((item, index) => (\n            <li className=\"task-container\" key={index}>\n              <input type=\"checkbox\" disabled={true} />\n              <textarea\n                className=\" task-text\"\n                rows=\"1\"\n                value={item}\n                ref={(el) => (listRef.current = [...listRef.current, el])}\n                onBlur={(event) => {\n                  handleUserClickOut(event, index);\n                }}\n                onChange={(event) => {\n                  handleTaskChange(event, index);\n                }}\n              />\n            </li>\n          ))}\n          <button className=\"task-container new-task task-text\">\n            <div onClick={(e) => createNewTask(e)}>+ New Task</div>\n            <input disabled={true} type=\"checkbox\" id=\"invisible-checkbox\" />\n          </button>\n        </ul>\n        <button\n          className=\"blue-button\"\n          onClick={(event) => {\n            handleSave(event);\n          }}\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,OAASC,CAAC,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,cAAe,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAIjC,IAJkC,CACnCC,SAAS,CACTC,qBAAqB,CACrBC,SACF,CAAC,CAAAH,IAAA,CAEC,KAAM,CAAAI,YAAY,CAAGH,SAAS,CAACE,SAAS,CAAC,CAACE,KAAK,CAC/C;AACA,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAACc,YAAY,CAAC,CAC9D,KAAM,CAAAI,SAAS,CAAGP,SAAS,CAACE,SAAS,CAAC,CAACM,YAAY,CACnD;AACA,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAAC,CAAC,GAAGkB,SAAS,CAAC,CAAC,CAE9D,KAAM,CAAAI,OAAO,CAAGrB,MAAM,CAAC,EAAE,CAAC,CAE1BC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,IAAI,CAAGD,OAAO,CAACE,OAAO,CAACC,MAAM,CACnC,GAAIF,IAAI,CAAG,CAAC,EAAID,OAAO,CAACE,OAAO,CAACD,IAAI,CAAG,CAAC,CAAC,GAAK,IAAI,CAAE,CAClDD,OAAO,CAACE,OAAO,CAACD,IAAI,CAAG,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,CAAE;AACrC,CACF,CAAC,CAAE,CAACN,WAAW,CAACK,MAAM,CAAC,CAAC,CAC1B;AACE,QAAS,CAAAE,gBAAgBA,CAACC,KAAK,CAAEC,KAAK,CAAE,CACtC,KAAM,CAAAC,YAAY,CAAG,CAAC,GAAGV,WAAW,CAAC,CACrCU,YAAY,CAACD,KAAK,CAAC,CAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,CACxCX,cAAc,CAACS,YAAY,CAAC,CAC5B;AACAF,KAAK,CAACG,MAAM,CAACE,KAAK,CAACC,MAAM,CAAG,KAAK,CACjCN,KAAK,CAACG,MAAM,CAACE,KAAK,CAACC,MAAM,IAAAC,MAAA,CAAMP,KAAK,CAACG,MAAM,CAACK,YAAY,MAAI,CAC9D,CACA,QAAS,CAAAC,iBAAiBA,CAACT,KAAK,CAAE,CAChC;AACAA,KAAK,CAACG,MAAM,CAACE,KAAK,CAACC,MAAM,CAAG,KAAK,CACjCN,KAAK,CAACG,MAAM,CAACE,KAAK,CAACC,MAAM,IAAAC,MAAA,CAAMP,KAAK,CAACG,MAAM,CAACK,YAAY,MAAI,CAC5DnB,eAAe,CAACW,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CACrC,CAEA,QAAS,CAAAM,kBAAkBA,CAACV,KAAK,CAAEC,KAAK,CAAE,CACxC,KAAM,CAAAU,WAAW,CAAGX,KAAK,CAACG,MAAM,CAACC,KAAK,CACtC,GAAIO,WAAW,CAACd,MAAM,GAAK,CAAC,CAAE,CAC5Be,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CACzB,KAAM,CAAAC,cAAc,CAAG,CAAC,GAAGtB,WAAW,CAAC,CACvCsB,cAAc,CAACC,GAAG,CAACd,KAAK,CAAC,CACzBR,cAAc,CAACqB,cAAc,CAAC,CAChC,CACF,CACA;AACA,QAAS,CAAAE,mBAAmBA,CAAChB,KAAK,CAAE,CAClChB,qBAAqB,CAACC,SAAS,CAAE,mBAAmB,CAAE,KAAK,CAAC,CAC9D,CACF;AACE,QAAS,CAAAgC,aAAaA,CAACjB,KAAK,CAAE,CAC5B,KAAM,CAAAkB,IAAI,CAAGlB,KAAK,CAACG,MAAM,CAACC,KAAK,CAC/BX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE0B,IAAI,CAAC,CAAC,CACxC,CAEA;AACA,QAAS,CAAAC,UAAUA,CAACnB,KAAK,CAAE,CACzBhB,qBAAqB,CAACC,SAAS,CAAE,mBAAmB,CAAE,KAAK,CAAC,CAC5DD,qBAAqB,CAACC,SAAS,CAAE,cAAc,CAAEO,WAAW,CAAC,CAC7DR,qBAAqB,CAACC,SAAS,CAAE,OAAO,CAAEG,YAAY,CAAC,CACzD,CAEA,mBACEV,IAAA,QAAK0C,EAAE,CAAC,qBAAqB,CAAAC,QAAA,cAC3BzC,KAAA,QAAK0C,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzBzC,KAAA,QAAK0C,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC1B3C,IAAA,aACE6C,IAAI,CAAC,GAAG,CACRD,SAAS,CAAC,wBAAwB,CAClClB,KAAK,CAAEhB,YAAa,CACpBoC,WAAW,CAAC,OAAO,CACnBC,QAAQ,CAAGzB,KAAK,EAAK,CACnBS,iBAAiB,CAACT,KAAK,CAAC,CAC1B,CAAE,CACO,CAAC,cACZtB,IAAA,WACEgD,OAAO,CAAG1B,KAAK,EAAK,CAClBgB,mBAAmB,CAAChB,KAAK,CAAC,CAC5B,CAAE,CACF,aAAW,uBAAuB,CAClCsB,SAAS,CAAC,cAAc,CAAAD,QAAA,cAExB3C,IAAA,CAACF,CAAC,EAACmB,IAAI,CAAC,IAAI,CAACgC,KAAK,CAAC,MAAM,CAAE,CAAC,CACtB,CAAC,EACN,CAAC,cACN/C,KAAA,OAAAyC,QAAA,EACG7B,WAAW,CAACoC,GAAG,CAAC,CAACC,IAAI,CAAE5B,KAAK,gBAC3BrB,KAAA,OAAI0C,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC5B3C,IAAA,UAAOoD,IAAI,CAAC,UAAU,CAACC,QAAQ,CAAE,IAAK,CAAE,CAAC,cACzCrD,IAAA,aACE4C,SAAS,CAAC,YAAY,CACtBC,IAAI,CAAC,GAAG,CACRnB,KAAK,CAAEyB,IAAK,CACZG,GAAG,CAAGC,EAAE,EAAMvC,OAAO,CAACE,OAAO,CAAG,CAAC,GAAGF,OAAO,CAACE,OAAO,CAAEqC,EAAE,CAAG,CAC1DC,MAAM,CAAGlC,KAAK,EAAK,CACjBU,kBAAkB,CAACV,KAAK,CAAEC,KAAK,CAAC,CAClC,CAAE,CACFwB,QAAQ,CAAGzB,KAAK,EAAK,CACnBD,gBAAgB,CAACC,KAAK,CAAEC,KAAK,CAAC,CAChC,CAAE,CACH,CAAC,GAbgCA,KAchC,CACL,CAAC,cACFrB,KAAA,WAAQ0C,SAAS,CAAC,mCAAmC,CAAAD,QAAA,eACnD3C,IAAA,QAAKgD,OAAO,CAAGS,CAAC,EAAKlB,aAAa,CAACkB,CAAC,CAAE,CAAAd,QAAA,CAAC,YAAU,CAAK,CAAC,cACvD3C,IAAA,UAAOqD,QAAQ,CAAE,IAAK,CAACD,IAAI,CAAC,UAAU,CAACV,EAAE,CAAC,oBAAoB,CAAE,CAAC,EAC3D,CAAC,EACP,CAAC,cACL1C,IAAA,WACE4C,SAAS,CAAC,aAAa,CACvBI,OAAO,CAAG1B,KAAK,EAAK,CAClBmB,UAAU,CAACnB,KAAK,CAAC,CACnB,CAAE,CAAAqB,QAAA,CACH,MAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}