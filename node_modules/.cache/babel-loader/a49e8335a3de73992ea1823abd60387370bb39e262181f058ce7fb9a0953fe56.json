{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const [listItems, setListItems] = useState(['Item 1', 'Item 2', 'Item 3']);\n  function handleInputChange(event, index) {\n    const text = event.target.value;\n    const newListItems = [...listItems];\n    if (text === '') {\n      newListItems.splice(index, 1);\n      setListItems(newListItems);\n      return;\n    } else {\n      const newListItems = [...listItems];\n      newListItems[index] = event.target.value;\n    }\n    setListItems(newListItems);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: item,\n            onChange: e => {\n              handleInputChange(e, index);\n            },\n            className: \"task\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: \"\",\n      placeholder: \"Start typing...\",\n      onChange: e => createNewTask(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"9jCqNU7c1kmeikFXp6YVh+mXoSI=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","listItems","setListItems","handleInputChange","event","index","text","target","value","newListItems","splice","createNewTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onChange","e","autoFocus","placeholder","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function TaskList() {\n\n  const [listItems, setListItems] = useState(['Item 1', 'Item 2', 'Item 3'])\n\n  function handleInputChange(event, index) {\n    const text = event.target.value\n    const newListItems = [...listItems]\n\n    if (text === '') {\n      newListItems.splice(index, 1)\n      setListItems(newListItems)\n      return\n    } else {\n      const newListItems = [...listItems]\n      newListItems[index] = event.target.value\n    }\n    setListItems(newListItems)\n  }\n\n  function createNewTask(event) {\n    const text = event.target.value\n    setListItems([...listItems, text])\n\n  }\n\n  return (\n    <div className=\"TaskList\">\n      <h1>Task List</h1>\n      <ul>\n        {listItems.map((item, index) => (\n          <li key={index}>\n            <div className='input-wrapper'>\n              <input value={item} onChange={(e) => {handleInputChange(e, index)}} className=\"task\" autoFocus></input>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <input value={\"\"} placeholder='Start typing...' onChange={(e) => createNewTask(e)}></input>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAE1E,SAASO,iBAAiBA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACvC,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK;IAC/B,MAAMC,YAAY,GAAG,CAAC,GAAGR,SAAS,CAAC;IAEnC,IAAIK,IAAI,KAAK,EAAE,EAAE;MACfG,YAAY,CAACC,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;MAC7BH,YAAY,CAACO,YAAY,CAAC;MAC1B;IACF,CAAC,MAAM;MACL,MAAMA,YAAY,GAAG,CAAC,GAAGR,SAAS,CAAC;MACnCQ,YAAY,CAACJ,KAAK,CAAC,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK;IAC1C;IACAN,YAAY,CAACO,YAAY,CAAC;EAC5B;EAEA,SAASE,aAAaA,CAACP,KAAK,EAAE;IAC5B,MAAME,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK;IAC/BN,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEK,IAAI,CAAC,CAAC;EAEpC;EAEA,oBACER,OAAA;IAAKc,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAAe,QAAA,EACGZ,SAAS,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEd,KAAK,kBACzBP,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAKc,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5Bf,OAAA;YAAOU,KAAK,EAAEW,IAAK;YAACC,QAAQ,EAAGC,CAAC,IAAK;cAAClB,iBAAiB,CAACkB,CAAC,EAAEhB,KAAK,CAAC;YAAA,CAAE;YAACO,SAAS,EAAC,MAAM;YAACU,SAAS;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpG;MAAC,GAHCZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLnB,OAAA;MAAOU,KAAK,EAAE,EAAG;MAACe,WAAW,EAAC,iBAAiB;MAACH,QAAQ,EAAGC,CAAC,IAAKV,aAAa,CAACU,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEV;AAACjB,EAAA,CAxCuBD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}