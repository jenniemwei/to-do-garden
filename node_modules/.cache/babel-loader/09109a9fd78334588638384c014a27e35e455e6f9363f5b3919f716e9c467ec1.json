{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx\",\n  _s = $RefreshSig$();\nimport TaskList from \"./TaskList\";\nimport \"../styles/AllTaskLists.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllTaskLists() {\n  _s();\n  const [taskLists, setTaskLists] = useState([{\n    title: \"Task List 1\",\n    currentItems: [\"Task 1\", ''],\n    completedItems: [\"Task 2\"],\n    editModeDisplayed: false,\n    optionsDisplayed: false\n  }, {\n    title: \"Task List 2\",\n    currentItems: [\"Task 3\"],\n    completedItems: [\"Task 4\"],\n    editModeDisplayed: false,\n    optionsDisplayed: false\n  }]);\n  function handleNewList() {\n    setTaskLists([...taskLists, {\n      name: \"Title\",\n      currentItems: [],\n      completedItems: [],\n      editModeDisplayed: true,\n      optionsDisplayed: false\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-lists-container\",\n    children: [taskLists.map((taskList, index) => {\n      return /*#__PURE__*/_jsxDEV(TaskList, {\n        listIndex: index,\n        taskLists: taskLists,\n        setTaskLists: setTaskLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => {\n        handleNewList(event);\n      },\n      children: \"New List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AllTaskLists, \"pixReh0AtSNx0HTCmvjiAcJPFms=\");\n_c = AllTaskLists;\nvar _c;\n$RefreshReg$(_c, \"AllTaskLists\");","map":{"version":3,"names":["TaskList","useState","jsxDEV","_jsxDEV","AllTaskLists","_s","taskLists","setTaskLists","title","currentItems","completedItems","editModeDisplayed","optionsDisplayed","handleNewList","name","className","children","map","taskList","index","listIndex","fileName","_jsxFileName","lineNumber","columnNumber","onClick","event","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx"],"sourcesContent":["import TaskList from \"./TaskList\"\nimport \"../styles/AllTaskLists.css\"\nimport { useState } from \"react\"\n\nexport default function AllTaskLists() {\n  const [taskLists, setTaskLists] = useState([\n    {\n      title: \"Task List 1\",\n      currentItems: [\n        \"Task 1\",\n        ''\n      ],\n      completedItems: [\n        \"Task 2\",\n      ],\n      editModeDisplayed: false,\n      optionsDisplayed: false,\n    },\n    {\n      title: \"Task List 2\",\n      currentItems: [\n        \"Task 3\",\n      ],\n      completedItems: [\n        \"Task 4\",\n      ],\n      editModeDisplayed: false,\n      optionsDisplayed: false,\n    },\n  ])\n\n  function handleNewList() {\n    setTaskLists([\n      ...taskLists,\n      {\n        name: \"Title\",\n        currentItems: [],\n        completedItems: [],\n        editModeDisplayed: true,\n        optionsDisplayed: false,\n      }\n    ])\n  }\n\n\n\n  return (\n    <div className=\"all-lists-container\">\n\n      {taskLists.map((taskList, index) => {\n        return (\n          <TaskList\n            listIndex={index}\n            taskLists={taskLists}\n            setTaskLists={setTaskLists}\n          />\n        )\n      })}\n      <button onClick={(event)=>{handleNewList(event)}}>New List</button>\n      {/* <TaskList/>\n      <TaskList/> */}\n      {/* <button className=\"add-list-button\" onClick={() => handleAddTask}>Add Task</button> */}\n    </div>\n  )\n}"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAO,4BAA4B;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CACzC;IACEO,KAAK,EAAE,aAAa;IACpBC,YAAY,EAAE,CACZ,QAAQ,EACR,EAAE,CACH;IACDC,cAAc,EAAE,CACd,QAAQ,CACT;IACDC,iBAAiB,EAAE,KAAK;IACxBC,gBAAgB,EAAE;EACpB,CAAC,EACD;IACEJ,KAAK,EAAE,aAAa;IACpBC,YAAY,EAAE,CACZ,QAAQ,CACT;IACDC,cAAc,EAAE,CACd,QAAQ,CACT;IACDC,iBAAiB,EAAE,KAAK;IACxBC,gBAAgB,EAAE;EACpB,CAAC,CACF,CAAC;EAEF,SAASC,aAAaA,CAAA,EAAG;IACvBN,YAAY,CAAC,CACX,GAAGD,SAAS,EACZ;MACEQ,IAAI,EAAE,OAAO;MACbL,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,iBAAiB,EAAE,IAAI;MACvBC,gBAAgB,EAAE;IACpB,CAAC,CACF,CAAC;EACJ;EAIA,oBACET,OAAA;IAAKY,SAAS,EAAC,qBAAqB;IAAAC,QAAA,GAEjCV,SAAS,CAACW,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAClC,oBACEhB,OAAA,CAACH,QAAQ;QACPoB,SAAS,EAAED,KAAM;QACjBb,SAAS,EAAEA,SAAU;QACrBC,YAAY,EAAEA;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAEN,CAAC,CAAC,eACFrB,OAAA;MAAQsB,OAAO,EAAGC,KAAK,IAAG;QAACb,aAAa,CAACa,KAAK,CAAC;MAAA,CAAE;MAAAV,QAAA,EAAC;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIhE,CAAC;AAEV;AAACnB,EAAA,CA5DuBD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}