{"ast":null,"code":"import React,{useState}from'react';import'../styles/Lists.css';import ListOptions from'./ListOptions';import EditListMode from'./EditListMode';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function TaskList(_ref){let{listIndex,taskLists,setTaskLists}=_ref;// const[listItems, setListItems] = useState(['task 1 task 1 task 1 ','task 2','task 3 ', 'task 4']) //[ declared thing, how you set it to something/override]\n// const [checkedItems, setCheckedItems] = useState([])\n// // const[checked, setChecked] = useState(false)\n// const[optionsDisplayed, setOptionsDisplayed]=useState(false)\n// const[title,setTitle] = useState('Title')\n// state for each TaskList before save\n// const [editModeDisplayed, setEditModeDisplayed] = useState(false)\nfunction handleChangeTaskState(index,key,value){const newTaskLists=[...taskLists];newTaskLists[index][key]=value;setTaskLists(newTaskLists);}// function handleTaskChange(event, index) {\n//   const newListItems = [...listItems]\n//   newListItems[index] = event.target.value\n//   setListItems(newListItems)\n//   event.target.style.height = '1em';\n//   event.target.style.height = `${event.target.scrollHeight}px`; \n// }\n// function handleTitleChange(event){\n//   setTitle(event.target.value)\n// }\nconst listItems=taskLists[listIndex].currentItems;const checkedItems=taskLists[listIndex].completedItems;const editModeDisplayed=taskLists[listIndex].editModeDisplayed;const optionsDisplayed=taskLists[listIndex].optionsDisplayed;function handleCheckBoxChange(event,index,item){const currCheckbox=event.target.value;// setChecked()\nconst newListItems=[...listItems];newListItems.pop(index);const newCheckedItems=[...checkedItems,item];// const newListItems = listItems.filter((item, i) => i !== index)\nhandleChangeTaskState(listIndex,\"checkedItems\",newCheckedItems);handleChangeTaskState(listIndex,\"currentItems\",newListItems);}function handleOptionsClick(event){const currentOptionsDisplayed=taskLists[listIndex].optionsDisplayed;handleChangeTaskState(listIndex,\"optionsDisplayed\",!currentOptionsDisplayed);}// function createNewTask(event) {\n//   const text = event.target.value\n//   setListItems([...listItems, text])\n// }\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[editModeDisplayed&&/*#__PURE__*/_jsx(EditListMode,{taskLists:taskLists,handleChangeTaskState:handleChangeTaskState,listIndex:listIndex}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"list-name\",children:taskLists[listIndex].title}),/*#__PURE__*/_jsx(\"button\",{onClick:event=>{handleOptionsClick(event);},children:\"edit\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),optionsDisplayed&&/*#__PURE__*/_jsx(ListOptions,{taskLists:taskLists,handleChangeTaskState:handleChangeTaskState,listIndex:listIndex}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-items-container\",children:[listItems.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:false,onChange:event=>{handleCheckBoxChange(event,index,item);},className:\"task\",autoFocus:true}),/*#__PURE__*/_jsx(\"p\",{className:\"displayed-task\",children:item})]},index)),/*#__PURE__*/_jsx(\"h3\",{children:\"Completed\"}),checkedItems.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",disabled:true,checked:true,className:\"task\"}),/*#__PURE__*/_jsx(\"p\",{className:\"displayed-task\",children:item})]},index+listItems.length))]})]})]});}//arrow function =>{handleInputChange(event,index)} allows parameters passed","map":{"version":3,"names":["React","useState","ListOptions","EditListMode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskList","_ref","listIndex","taskLists","setTaskLists","handleChangeTaskState","index","key","value","newTaskLists","listItems","currentItems","checkedItems","completedItems","editModeDisplayed","optionsDisplayed","handleCheckBoxChange","event","item","currCheckbox","target","newListItems","pop","newCheckedItems","handleOptionsClick","currentOptionsDisplayed","children","className","title","onClick","map","type","checked","onChange","autoFocus","disabled","length"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\n\nexport default function TaskList({listIndex, taskLists, setTaskLists}) {\n\n  // const[listItems, setListItems] = useState(['task 1 task 1 task 1 ','task 2','task 3 ', 'task 4']) //[ declared thing, how you set it to something/override]\n  // const [checkedItems, setCheckedItems] = useState([])\n  // // const[checked, setChecked] = useState(false)\n  // const[optionsDisplayed, setOptionsDisplayed]=useState(false)\n  // const[title,setTitle] = useState('Title')\n\n  // state for each TaskList before save\n  // const [editModeDisplayed, setEditModeDisplayed] = useState(false)\n\n\n  function handleChangeTaskState(index, key, value) {\n    const newTaskLists = [...taskLists]\n    newTaskLists[index][key] = value\n    setTaskLists(newTaskLists)\n  }\n\n  // function handleTaskChange(event, index) {\n  //   const newListItems = [...listItems]\n  //   newListItems[index] = event.target.value\n  //   setListItems(newListItems)\n  //   event.target.style.height = '1em';\n  //   event.target.style.height = `${event.target.scrollHeight}px`; \n    \n  // }\n  // function handleTitleChange(event){\n  //   setTitle(event.target.value)\n  // }\n  \n  const listItems = taskLists[listIndex].currentItems\n  const checkedItems = taskLists[listIndex].completedItems\n  const editModeDisplayed = taskLists[listIndex].editModeDisplayed\n  const optionsDisplayed = taskLists[listIndex].optionsDisplayed\n\n  function handleCheckBoxChange(event,index,item){\n    const currCheckbox=event.target.value\n    // setChecked()\n    const newListItems = [...listItems];\n    newListItems.pop(index);\n    const newCheckedItems = [...checkedItems, item]\n    // const newListItems = listItems.filter((item, i) => i !== index)\n    \n    handleChangeTaskState(listIndex, \"checkedItems\", newCheckedItems)\n    handleChangeTaskState(listIndex, \"currentItems\", newListItems)\n\n  }\n\n  function handleOptionsClick(event){\n    const currentOptionsDisplayed = taskLists[listIndex].optionsDisplayed\n    handleChangeTaskState(listIndex, \"optionsDisplayed\", !currentOptionsDisplayed)\n  }\n\n  // function createNewTask(event) {\n  //   const text = event.target.value\n  //   setListItems([...listItems, text])\n  // }\n  \n\n\n  return (\n    <>\n      {editModeDisplayed && <EditListMode \n        taskLists={taskLists}\n        handleChangeTaskState={handleChangeTaskState}\n        listIndex={listIndex}\n      />}\n      <div className=\"task-list\">\n        <div className='list-header'>      \n          <h1 className=\"list-name\">{taskLists[listIndex].title}</h1> \n          {/* make title not an input not working */}\n          <button onClick={(event)=>{handleOptionsClick(event)}}>edit</button>\n          </div>\n          <hr></hr>\n\n          {optionsDisplayed && <ListOptions \n          taskLists={taskLists}\n          handleChangeTaskState={handleChangeTaskState}\n          listIndex={listIndex}/>\n          }\n        <ul className=\"list-items-container\">\n          {listItems.map((item, index) => (\n            <li className='task-container' key={index}>\n              <input \n                type= 'checkbox'\n                checked={false}\n                onChange={(event) => {handleCheckBoxChange(event, index,item)}} className=\"task\" autoFocus />\n                <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n          <h3>Completed</h3>\n          {checkedItems.map((item, index) => (\n            <li className='task-container' key={index + listItems.length}>\n              <input type='checkbox' disabled={true} checked={true} className=\"task\" />\n              <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n        </ul>\n\n      </div>\n    </>\n  );\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}