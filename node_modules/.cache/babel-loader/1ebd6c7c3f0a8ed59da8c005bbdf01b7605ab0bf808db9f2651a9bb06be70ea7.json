{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import ListOptions from'./ListOptions';import{X}from'react-feather';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EditListMode(_ref){let{taskLists,handleChangeTaskState,listIndex}=_ref;const currentTitle=taskLists[listIndex].title;const[editingTitle,setEditingTitle]=useState(currentTitle);const listItems=taskLists[listIndex].currentItems;const[editingList,setEditingList]=useState([...listItems]);// const checkedItems = taskLists[listIndex].completedItems\n// const editModeDisplayed = taskLists[listIndex].editModeDisplayed\n// const optionsDisplayed = taskLists[listIndex].optionsDisplayed\nconst listRef=useRef([]);useEffect(()=>{const size=listRef.current.length;if(size>0&&listRef.current[size-1]!==null){listRef.current[size-1].focus();//focuses on recently created task\n}},[editingList.length]);function handleTaskChange(event,index){const newListItems=[...editingList];console.log(\"NEW LIST ITEMS\",newListItems);console.log(\"INDEX\",index);newListItems[index]=event.target.value;setEditingList(newListItems);console.log(\"TASK LISTS: \",taskLists);event.target.style.height='1em';event.target.style.height=\"\".concat(event.target.scrollHeight,\"px\");}function handleTitleChange(event){setEditingTitle(event.target.value);}function handleUserClickOut(event,index){const taskContent=event.target.value;// console.log(\"CLICKED OUT\")\nif(taskContent.length===0){console.log(\"EMPTY TASK\");const newEditingList=[...editingList];newEditingList.pop(index);setEditingList(newEditingList);}}function handleCloseEditMode(event){handleChangeTaskState(listIndex,\"editModeDisplayed\",false);if(taskLists[listIndex].currentItems.length===0&&taskLists[listIndex].title===\"Title\"){}}function createNewTask(event){const text=event.target.value;setEditingList([...editingList,text]);}function handleSave(event){handleChangeTaskState(listIndex,\"editModeDisplayed\",false);handleChangeTaskState(listIndex,\"currentItems\",editingList);handleChangeTaskState(listIndex,\"title\",editingTitle);}return/*#__PURE__*/_jsx(\"div\",{id:\"edit-mode-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"list-container edit-mode\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-header\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"title-input list-name\",value:editingTitle,onChange:event=>{handleTitleChange(event);}}),/*#__PURE__*/_jsx(\"button\",{onClick:event=>{handleCloseEditMode(event);},className:\"edit-list-close-button\",children:/*#__PURE__*/_jsx(X,{color:\"gray\"})})]}),/*#__PURE__*/_jsxs(\"ul\",{children:[editingList.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",disabled:true}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"1\",value:item,ref:el=>listRef.current=[...listRef.current,el],onBlur:event=>{handleUserClickOut(event,index);},onChange:event=>{handleTaskChange(event,index);},className:\"task-text\"})]},index)),/*#__PURE__*/_jsxs(\"li\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{rows:\"1\",placeholder:\"+ New Task\",onClick:e=>createNewTask(e),className:\"task-text\"}),/*#__PURE__*/_jsx(\"input\",{disabled:true,type:\"checkbox\",id:\"invisible-checkbox\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:event=>{handleSave(event);},children:\"Save\"})]})});}","map":{"version":3,"names":["React","useState","useRef","useEffect","ListOptions","X","jsx","_jsx","jsxs","_jsxs","EditListMode","_ref","taskLists","handleChangeTaskState","listIndex","currentTitle","title","editingTitle","setEditingTitle","listItems","currentItems","editingList","setEditingList","listRef","size","current","length","focus","handleTaskChange","event","index","newListItems","console","log","target","value","style","height","concat","scrollHeight","handleTitleChange","handleUserClickOut","taskContent","newEditingList","pop","handleCloseEditMode","createNewTask","text","handleSave","id","children","className","onChange","onClick","color","map","item","type","disabled","rows","ref","el","onBlur","placeholder","e"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/EditListMode.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport ListOptions from './ListOptions'\nimport { X } from 'react-feather'\n\n\nexport default function EditListMode({ taskLists, handleChangeTaskState, listIndex}) {\n\n  const currentTitle=taskLists[listIndex].title\n  const [editingTitle, setEditingTitle]=useState(currentTitle)\n  const listItems = taskLists[listIndex].currentItems\n  const [editingList, setEditingList]=useState([...listItems])\n  // const checkedItems = taskLists[listIndex].completedItems\n  // const editModeDisplayed = taskLists[listIndex].editModeDisplayed\n  // const optionsDisplayed = taskLists[listIndex].optionsDisplayed\n\n\n    const listRef = useRef([]);\n\n    useEffect(() => {\n      const size = listRef.current.length;\n      if (size > 0 && listRef.current[size - 1] !== null) {\n        listRef.current[size - 1].focus(); //focuses on recently created task\n      }\n      \n    }, [editingList.length]);\n  \n    function handleTaskChange(event, index) {\n      const newListItems = [...editingList]\n      console.log(\"NEW LIST ITEMS\", newListItems) \n      console.log(\"INDEX\", index)\n      newListItems[index] = event.target.value\n      setEditingList(newListItems)\n      console.log(\"TASK LISTS: \",taskLists);\n      event.target.style.height = '1em';\n      event.target.style.height = `${event.target.scrollHeight}px`; \n      \n    }\n    function handleTitleChange(event){\n      setEditingTitle(event.target.value)\n    }\n  \n  \n    function handleUserClickOut(event,index){\n      const taskContent=event.target.value\n      // console.log(\"CLICKED OUT\")\n      if (taskContent.length===0){\n        console.log(\"EMPTY TASK\")\n        const newEditingList=[...editingList]\n        newEditingList.pop(index)\n        setEditingList(newEditingList)\n      }\n    }\n    function handleCloseEditMode(event){\n      handleChangeTaskState(listIndex, \"editModeDisplayed\", false)\n      if (taskLists[listIndex].currentItems.length === 0 && taskLists[listIndex].title === \"Title\") {\n\n      }\n    }\n  \n    function createNewTask(event) {\n      const text = event.target.value\n      setEditingList([...editingList, text])\n    }\n\n    function handleSave(event){\n      handleChangeTaskState(listIndex, \"editModeDisplayed\", false)\n      handleChangeTaskState(listIndex, \"currentItems\", editingList)\n      handleChangeTaskState(listIndex, \"title\", editingTitle)\n    }\n    \n    return (\n      <div id=\"edit-mode-container\" >\n      <div className=\"list-container edit-mode\">\n        <div className='list-header'>      \n          <input className=\"title-input list-name\" value={editingTitle} onChange={(event)=>{handleTitleChange(event)}}></input>\n          <button onClick={(event)=>{handleCloseEditMode(event)}} className=\"edit-list-close-button\"><X color=\"gray\"/></button>\n          </div>\n        <ul>\n          {editingList.map((item, index) => (\n            <li className=\"task-container\" key={index}>\n              <input \n                type= 'checkbox' disabled={true}/>\n              <textarea \n                rows=\"1\" \n                value={item}\n                ref = {el => listRef.current = [...listRef.current, el]}\n                onBlur={(event) => {handleUserClickOut(event,index)}}  \n                onChange={(event) => {handleTaskChange(event, index)}} \n                className=\"task-text\"\n              />\n            </li>\n          ))}\n          <li className=\"task-container\">\n            <textarea \n              rows=\"1\" \n              placeholder='+ New Task' \n              onClick={(e) => createNewTask(e)} \n              className=\"task-text\"\n            /> \n            <input \n              disabled={true}\n              type= 'checkbox'\n              id='invisible-checkbox'\n            />\n          </li>\n        </ul>\n        <button onClick={(event)=>{handleSave(event)}}>Save</button>\n      </div>\n      </div>\n\n    );\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}