{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/EditListMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ListOptions from './ListOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditListMode({\n  setListItems,\n  setTitle,\n  title,\n  listItems,\n  setEditModeDisplayed\n}) {\n  _s();\n  // const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n  // const [displayed, setDisplayed]=useState(true)\n  console.log(listItems);\n  // const[title,setTitle]=useState('Title')\n\n  const listRef = useRef([]);\n  useEffect(() => {\n    const size = listItems.length;\n    listRef.current[size - 1].focus();\n  });\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    console.log(\"CLICKED OUT\");\n    if (taskContent.length === 0) {\n      const newListItems = [...listItems];\n      newListItems.pop(index);\n      setListItems(newListItems);\n    }\n  }\n  function handleCloseEditMode(event) {\n    setEditModeDisplayed(false);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n    const size = listItems.length;\n    // listRef.current[size - 1].focus();\n    // listItems[size - 1].focus();\n  }\n  // function handleDone(event){\n  //   setListItems(listItems)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-mode-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskList edit-mode\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: event => {\n            handleTitleChange(event);\n          },\n          className: \"list-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleCloseEditMode(event);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            value: item,\n            ref: el => listRef.current = [...listRef.current, el]\n            // autoFocus={true}\n            // onBlur={(event) => {handleUserClickOut(event,index)}}  \n            ,\n            onChange: event => {\n              handleTaskChange(event, index);\n            },\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            placeholder: \"+ New Task\",\n            onClick: e => createNewTask(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: true,\n            type: \"checkbox\",\n            id: \"invisible-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(EditListMode, \"84n7gRvM2a8Nl9i4H/fLGxCIUPc=\");\n_c = EditListMode;\nvar _c;\n$RefreshReg$(_c, \"EditListMode\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ListOptions","jsxDEV","_jsxDEV","EditListMode","setListItems","setTitle","title","listItems","setEditModeDisplayed","_s","console","log","listRef","size","length","current","focus","handleTaskChange","event","index","newListItems","target","value","style","height","scrollHeight","handleTitleChange","handleUserClickOut","taskContent","pop","handleCloseEditMode","createNewTask","text","id","children","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","type","disabled","rows","ref","el","placeholder","e","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/EditListMode.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport ListOptions from './ListOptions'\n\n\nexport default function EditListMode({ setListItems, setTitle, title, listItems, setEditModeDisplayed }) {\n\n    // const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n    // const [displayed, setDisplayed]=useState(true)\n    console.log(listItems);\n    // const[title,setTitle]=useState('Title')\n\n    const listRef = useRef([]);\n\n    useEffect(() => {\n      const size = listItems.length;\n      listRef.current[size - 1].focus();\n    });\n\n    function handleTaskChange(event, index) {\n      const newListItems = [...listItems]\n      newListItems[index] = event.target.value\n      setListItems(newListItems)\n      event.target.style.height = '1em';\n      event.target.style.height = `${event.target.scrollHeight}px`; \n      \n    }\n    function handleTitleChange(event){\n      setTitle(event.target.value)\n    }\n  \n  \n    function handleUserClickOut(event,index){\n      const taskContent=event.target.value\n      console.log(\"CLICKED OUT\")\n      if (taskContent.length===0){\n        const newListItems=[...listItems]\n        newListItems.pop(index)\n        setListItems(newListItems)\n      }\n    }\n    function handleCloseEditMode(event){\n      setEditModeDisplayed(false)\n\n    }\n  \n    function createNewTask(event) {\n      const text = event.target.value\n      setListItems([...listItems, text])\n      const size = listItems.length;\n      // listRef.current[size - 1].focus();\n      // listItems[size - 1].focus();\n    }\n    // function handleDone(event){\n    //   setListItems(listItems)\n    // }\n    \n    return (\n      <div id=\"edit-mode-container\" >\n      <div className=\"TaskList edit-mode\">\n        <div className='list-header'>      \n          <input value={title} onChange={(event)=>{handleTitleChange(event)}} className=\"list-name\"></input>\n          <button onClick={(event)=>{handleCloseEditMode(event)}}>Close</button>\n          </div>\n  \n        <ul>\n          {listItems.map((item, index) => (\n            <li key={index}>\n              <input \n                type= 'checkbox' disabled={true}/>\n              <textarea \n                rows=\"1\" \n                value={item}\n                ref = {el => listRef.current = [...listRef.current, el]}\n                // autoFocus={true}\n                // onBlur={(event) => {handleUserClickOut(event,index)}}  \n                onChange={(event) => {handleTaskChange(event, index)}} \n                className=\"task\"\n              />\n            </li>\n          ))}\n          <li>\n            <textarea \n              rows=\"1\" \n              placeholder='+ New Task' \n              onClick={(e) => createNewTask(e)} \n            /> \n            <input \n              disabled={true}\n              type= 'checkbox'\n              id='invisible-checkbox'\n            />\n          </li>\n        </ul>\n        {/* <button onClick={(event)=>{handleDone(event)}}>Save</button> */}\n  \n      </div>\n      </div>\n\n    );\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}