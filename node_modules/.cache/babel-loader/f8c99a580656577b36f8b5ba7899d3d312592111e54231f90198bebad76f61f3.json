{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const [listItems, setListItems] = useState([]); //[ declared thing, how you set it to something/override]\n  const [checked, setChecked] = useState(false);\n  function handleInputChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleCheckBoxChange(event, index) {\n    const currCheckbox = event.target.value;\n    setChecked();\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    if (taskContent.length === 0) {\n      const newListItems = [...listItems];\n      newListItems.pop(index);\n      setListItems(newListItems);\n    }\n  }\n  function handleOptionsClick(event, index) {}\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"list-name\",\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          handleOptionsClick(event, index);\n        },\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListOptions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checked //checked left= if box is checked or not, checked right= variable storing T/F for checked\n          ,\n          onChange: event => {\n            handleCheckBoxChange(event, index);\n          },\n          className: \"task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"1\",\n          onBlur: event => {\n            handleUserClickOut(event, index);\n          },\n          type: \"checkbox\",\n          value: item,\n          onChange: event => {\n            handleInputChange(event, index);\n          },\n          className: \"task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"1\",\n          value: \"\",\n          placeholder: \"+ New Task\",\n          onChange: e => createNewTask(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: \"true\",\n          type: \"checkbox\",\n          id: \"invisible-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n_s(TaskList, \"VZwJ0fWZOCxMjaUQK0jD9MRdpHo=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","ListOptions","jsxDEV","_jsxDEV","TaskList","_s","listItems","setListItems","checked","setChecked","handleInputChange","event","index","newListItems","target","value","style","height","scrollHeight","handleCheckBoxChange","currCheckbox","handleUserClickOut","taskContent","length","pop","handleOptionsClick","createNewTask","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","type","onChange","autoFocus","rows","onBlur","placeholder","e","disabled","id","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nexport default function TaskList() {\n\n  const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n  const[checked, setChecked]= useState(false)\n\n  function handleInputChange(event, index) {\n    const newListItems = [...listItems]\n    newListItems[index] = event.target.value\n    setListItems(newListItems)\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`; \n    \n  }\n  \n  function handleCheckBoxChange(event,index){\n    const currCheckbox=event.target.value\n    setChecked()\n\n  }\n\n  function handleUserClickOut(event,index){\n    const taskContent=event.target.value\n    if (taskContent.length===0){\n      const newListItems=[...listItems]\n      newListItems.pop(index)\n      setListItems(newListItems)\n    }\n  }\n  function handleOptionsClick(event,index){\n    \n  }\n  function createNewTask(event) {\n    const text = event.target.value\n    setListItems([...listItems, text])\n\n  }\n\n\n  return (\n    <div className=\"TaskList\">\n      <div className='list-header'>      \n        <h1 className=\"list-name\">Task List</h1>\n        <button onClick={(event)=>{handleOptionsClick(event, index)}}>edit</button>\n        </div>\n\n      <ListOptions/>\n      <ul>\n        {listItems.map((item, index) => (\n          <li key={index}>\n            <input \n              type= 'checkbox'\n              checked={checked} //checked left= if box is checked or not, checked right= variable storing T/F for checked\n              onChange={(event) => {handleCheckBoxChange(event, index)}} className=\"task\" autoFocus />\n              <textarea rows=\"1\" onBlur={(event)=>{handleUserClickOut(event,index)}} type= 'checkbox' value={item} onChange={(event) => {handleInputChange(event, index)}} className=\"task\" autoFocus />\n          </li>\n        ))}\n        <li>\n          <textarea rows=\"1\" value={\"\"} placeholder='+ New Task' onChange={(e) => createNewTask(e)} /> \n          <input \n              disabled='true'\n              type= 'checkbox'\n              id='invisible-checkbox'\n              />\n        </li>\n      </ul>\n\n    </div>\n  );\n\n\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}