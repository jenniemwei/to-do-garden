{"ast":null,"code":"// import React, { useState } from 'react'\n// import '../styles/Lists.css';\n// export default function fuck() {\n\n//   const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n//   const[checked, setChecked]= useState(false)\n\n//   function handleInputChange(event, index) {\n//     const newListItems = [...listItems]\n//     newListItems[index] = event.target.value\n//     setListItems(newListItems)\n//     event.target.style.height = '1em';\n//     event.target.style.height = `${event.target.scrollHeight}px`; \n\n//   }\n\n//   function handleCheckBoxChange(event,index){\n//     const currCheckbox=event.target.value\n//     setChecked()\n\n//   }\n\n//   function handleUserClickOut(event,index){\n//     const taskContent=event.target.value\n//     if (taskContent.length===0){\n//       const newListItems=[...listItems]\n//       newListItems.pop(index)\n//       setListItems(newListItems)\n//     }\n\n//   }\n//   function createNewTask(event) {\n//     const text = event.target.value\n//     setListItems([...listItems, text])\n\n//   }\n\n//   return (\n//     <div className=\"TaskList\">\n//       <h1>Task List</h1>\n//       {/* <ListOptionsPopup/> */}\n//       <ul>\n//         {listItems.map((item, index) => (\n//           <li key={index}>\n//             <input \n//               type= 'checkbox'\n//               checked={checked} //checked left= if box is checked or not, checked right= variable storing T/F for checked\n//               onChange={(event) => {handleCheckBoxChange(event, index)}} className=\"task\" autoFocus />\n//               <textarea rows=\"1\" onBlur={(event)=>{handleUserClickOut(event,index)}} type= 'checkbox' value={item} onChange={(event) => {handleInputChange(event, index)}} className=\"task\" autoFocus />\n//           </li>\n//         ))}\n//         <li>\n//           <textarea rows=\"1\" value={\"\"} placeholder='+ New Task' onChange={(e) => createNewTask(e)} /> \n//           <input \n//               disabled='true'\n//               type= 'checkbox'\n//               id='invisible-checkbox'\n//               />\n//         </li>\n//       </ul>\n\n//     </div>\n//   );\n\n// }\n// //arrow function =>{handleInputChange(event,index)} allows parameters passed","map":{"version":3,"names":[],"sources":["/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import '../styles/Lists.css';\n// export default function fuck() {\n\n//   const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n//   const[checked, setChecked]= useState(false)\n\n//   function handleInputChange(event, index) {\n//     const newListItems = [...listItems]\n//     newListItems[index] = event.target.value\n//     setListItems(newListItems)\n//     event.target.style.height = '1em';\n//     event.target.style.height = `${event.target.scrollHeight}px`; \n    \n//   }\n  \n//   function handleCheckBoxChange(event,index){\n//     const currCheckbox=event.target.value\n//     setChecked()\n\n//   }\n\n//   function handleUserClickOut(event,index){\n//     const taskContent=event.target.value\n//     if (taskContent.length===0){\n//       const newListItems=[...listItems]\n//       newListItems.pop(index)\n//       setListItems(newListItems)\n//     }\n\n//   }\n//   function createNewTask(event) {\n//     const text = event.target.value\n//     setListItems([...listItems, text])\n\n\n//   }\n\n\n//   return (\n//     <div className=\"TaskList\">\n//       <h1>Task List</h1>\n//       {/* <ListOptionsPopup/> */}\n//       <ul>\n//         {listItems.map((item, index) => (\n//           <li key={index}>\n//             <input \n//               type= 'checkbox'\n//               checked={checked} //checked left= if box is checked or not, checked right= variable storing T/F for checked\n//               onChange={(event) => {handleCheckBoxChange(event, index)}} className=\"task\" autoFocus />\n//               <textarea rows=\"1\" onBlur={(event)=>{handleUserClickOut(event,index)}} type= 'checkbox' value={item} onChange={(event) => {handleInputChange(event, index)}} className=\"task\" autoFocus />\n//           </li>\n//         ))}\n//         <li>\n//           <textarea rows=\"1\" value={\"\"} placeholder='+ New Task' onChange={(e) => createNewTask(e)} /> \n//           <input \n//               disabled='true'\n//               type= 'checkbox'\n//               id='invisible-checkbox'\n//               />\n//         </li>\n//       </ul>\n\n//     </div>\n//   );\n\n\n// }\n// //arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}