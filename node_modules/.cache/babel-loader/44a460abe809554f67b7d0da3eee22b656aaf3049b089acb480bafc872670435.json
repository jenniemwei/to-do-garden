{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/EditListMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ListOptions from './ListOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditListMode({\n  taskLists,\n  handleChangeTaskState,\n  listIndex\n}) {\n  _s();\n  const [editingTitle, setEditingTitle] = useState('');\n  const listItems = taskLists[listIndex].currentItems;\n  const [editingList, setEditingList] = useState([...listItems]);\n  const checkedItems = taskLists[listIndex].completedItems;\n  const editModeDisplayed = taskLists[listIndex].editModeDisplayed;\n  const optionsDisplayed = taskLists[listIndex].optionsDisplayed;\n  const listRef = useRef([]);\n  useEffect(() => {\n    const size = listRef.current.length;\n    listRef.current[size - 1].focus();\n  }, [listItems.length]);\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setEditinglist(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setEditingTitle(event.target.value);\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    // console.log(\"CLICKED OUT\")\n    if (taskContent.length === 0) {\n      const newEditingList = [...editingList];\n      newEditingList.pop(index);\n      setEditingList(newEditingList);\n    }\n  }\n  function handleCloseEditMode(event) {\n    handleChangeTaskState(listIndex, \"editModeDisplayed\", false);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setEditingList([...editingList, text]);\n  }\n  // function handleDone(event){\n  //   setListItems(listItems)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-mode-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list edit-mode\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title-input list-name\",\n          value: title,\n          onChange: event => {\n            handleTitleChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleCloseEditMode(event);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            value: item,\n            ref: el => listRef.current = [...listRef.current, el],\n            onBlur: event => {\n              handleUserClickOut(event, index);\n            },\n            onChange: event => {\n              handleTaskChange(event, index);\n            },\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            placeholder: \"+ New Task\",\n            onClick: e => createNewTask(e),\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: true,\n            type: \"checkbox\",\n            id: \"invisible-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          handleSave(event);\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n_s(EditListMode, \"REVEHlFd7KoOe9gNbx6f0vriB48=\");\n_c = EditListMode;\nvar _c;\n$RefreshReg$(_c, \"EditListMode\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ListOptions","jsxDEV","_jsxDEV","EditListMode","taskLists","handleChangeTaskState","listIndex","_s","editingTitle","setEditingTitle","listItems","currentItems","editingList","setEditingList","checkedItems","completedItems","editModeDisplayed","optionsDisplayed","listRef","size","current","length","focus","handleTaskChange","event","index","newListItems","target","value","setEditinglist","style","height","scrollHeight","handleTitleChange","handleUserClickOut","taskContent","newEditingList","pop","handleCloseEditMode","createNewTask","text","id","children","className","title","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","type","disabled","rows","ref","el","onBlur","placeholder","e","handleSave","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/EditListMode.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport ListOptions from './ListOptions'\n\n\nexport default function EditListMode({ taskLists, handleChangeTaskState, listIndex}) {\n\n\n  const [editingTitle, setEditingTitle]=useState('')\n  const listItems = taskLists[listIndex].currentItems\n  const [editingList, setEditingList]=useState([...listItems])\n  const checkedItems = taskLists[listIndex].completedItems\n  const editModeDisplayed = taskLists[listIndex].editModeDisplayed\n  const optionsDisplayed = taskLists[listIndex].optionsDisplayed\n\n\n    const listRef = useRef([]);\n\n    useEffect(() => {\n      const size = listRef.current.length;\n      listRef.current[size - 1].focus();\n      \n    }, [listItems.length]);\n  \n    function handleTaskChange(event, index) {\n      const newListItems = [...listItems]\n      newListItems[index] = event.target.value\n      setEditinglist(newListItems)\n      event.target.style.height = '1em';\n      event.target.style.height = `${event.target.scrollHeight}px`; \n      \n    }\n    function handleTitleChange(event){\n      setEditingTitle(event.target.value)\n    }\n  \n  \n    function handleUserClickOut(event,index){\n      const taskContent=event.target.value\n      // console.log(\"CLICKED OUT\")\n      if (taskContent.length===0){\n        const newEditingList=[...editingList]\n        newEditingList.pop(index)\n        setEditingList(newEditingList)\n      }\n    }\n    function handleCloseEditMode(event){\n      handleChangeTaskState(listIndex, \"editModeDisplayed\", false)\n    }\n  \n    function createNewTask(event) {\n      const text = event.target.value\n      setEditingList([...editingList, text])\n    }\n    // function handleDone(event){\n    //   setListItems(listItems)\n    // }\n    \n    return (\n      <div id=\"edit-mode-container\" >\n      <div className=\"task-list edit-mode\">\n        <div className='list-header'>      \n          <input className=\"title-input list-name\" value={title} onChange={(event)=>{handleTitleChange(event)}}></input>\n          <button onClick={(event)=>{handleCloseEditMode(event)}}>Close</button>\n          </div>\n  \n        <ul>\n          {listItems.map((item, index) => (\n            <li key={index}>\n              <input \n                type= 'checkbox' disabled={true}/>\n              <textarea \n                rows=\"1\" \n                value={item}\n                ref = {el => listRef.current = [...listRef.current, el]}\n                onBlur={(event) => {handleUserClickOut(event,index)}}  \n                onChange={(event) => {handleTaskChange(event, index)}} \n                className=\"task\"\n              />\n            </li>\n          ))}\n          <li>\n            <textarea \n              rows=\"1\" \n              placeholder='+ New Task' \n              onClick={(e) => createNewTask(e)} \n              className=\"task\"\n            /> \n            <input \n              disabled={true}\n              type= 'checkbox'\n              id='invisible-checkbox'\n            />\n          </li>\n        </ul>\n        <button onClick={(event)=>{handleSave(event)}}>Save</button>\n      </div>\n      </div>\n\n    );\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}