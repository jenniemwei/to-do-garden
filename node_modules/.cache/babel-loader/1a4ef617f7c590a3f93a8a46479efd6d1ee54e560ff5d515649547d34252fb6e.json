{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/EditListMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ListOptions from './ListOptions';\nimport { X } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditListMode({\n  taskLists,\n  handleChangeTaskState,\n  listIndex\n}) {\n  _s();\n  const currentTitle = taskLists[listIndex].title;\n  const [editingTitle, setEditingTitle] = useState(currentTitle);\n  const listItems = taskLists[listIndex].currentItems;\n  const [editingList, setEditingList] = useState([...listItems]);\n  // const checkedItems = taskLists[listIndex].completedItems\n  // const editModeDisplayed = taskLists[listIndex].editModeDisplayed\n  // const optionsDisplayed = taskLists[listIndex].optionsDisplayed\n\n  const listRef = useRef([]);\n  useEffect(() => {\n    const size = listRef.current.length;\n    if (size > 1 && listRef.current[size - 1] !== null) {\n      listRef.current[size - 1].focus(); //focuses on recently created task\n    }\n  }, [editingList.length]);\n  function handleTaskChange(event, index) {\n    const newListItems = [...editingList];\n    console.log(\"NEW LIST ITEMS\", newListItems);\n    console.log(\"INDEX\", index);\n    newListItems[index] = event.target.value;\n    setEditingList(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setEditingTitle(event.target.value);\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    // console.log(\"CLICKED OUT\")\n    if (taskContent.length === 0) {\n      console.log(\"EMPTY TASK\");\n      const newEditingList = [...editingList];\n      newEditingList.pop(index);\n      setEditingList(newEditingList);\n    }\n  }\n  function handleCloseEditMode(event) {\n    handleChangeTaskState(listIndex, \"editModeDisplayed\", false);\n    if (taskLists[listIndex].title.length === 0) {\n      const newTaskLists = [...taskLists];\n      handleChangeTaskState(listIndex, \"title\", \"Untitled\");\n    }\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setEditingList([...editingList, text]);\n  }\n  function handleSave(event) {\n    handleChangeTaskState(listIndex, \"currentItems\", editingList);\n    handleChangeTaskState(listIndex, \"title\", editingTitle);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-mode-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container edit-mode\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title-input list-name\",\n          value: editingTitle,\n          onChange: event => {\n            handleTitleChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleCloseEditMode(event);\n          },\n          className: \"edit-list-close-button\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            color: \"gray\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 102\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [editingList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            value: item,\n            ref: el => listRef.current = [...listRef.current, el],\n            onBlur: event => {\n              handleUserClickOut(event, index);\n            },\n            onChange: event => {\n              handleTaskChange(event, index);\n            },\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            placeholder: \"+ New Task\",\n            onClick: e => createNewTask(e),\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: true,\n            type: \"checkbox\",\n            id: \"invisible-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          handleSave(event);\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n_s(EditListMode, \"MwfinAFWHKK1nqILirDckMxLEJs=\");\n_c = EditListMode;\nvar _c;\n$RefreshReg$(_c, \"EditListMode\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ListOptions","X","jsxDEV","_jsxDEV","EditListMode","taskLists","handleChangeTaskState","listIndex","_s","currentTitle","title","editingTitle","setEditingTitle","listItems","currentItems","editingList","setEditingList","listRef","size","current","length","focus","handleTaskChange","event","index","newListItems","console","log","target","value","style","height","scrollHeight","handleTitleChange","handleUserClickOut","taskContent","newEditingList","pop","handleCloseEditMode","newTaskLists","createNewTask","text","handleSave","id","children","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","map","item","type","disabled","rows","ref","el","onBlur","placeholder","e","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/EditListMode.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport ListOptions from './ListOptions'\nimport { X } from 'react-feather'\n\nexport default function EditListMode({ taskLists, handleChangeTaskState, listIndex}) {\n\n  const currentTitle=taskLists[listIndex].title\n  const [editingTitle, setEditingTitle]=useState(currentTitle)\n  const listItems = taskLists[listIndex].currentItems\n  const [editingList, setEditingList]=useState([...listItems])\n  // const checkedItems = taskLists[listIndex].completedItems\n  // const editModeDisplayed = taskLists[listIndex].editModeDisplayed\n  // const optionsDisplayed = taskLists[listIndex].optionsDisplayed\n\n\n    const listRef = useRef([]);\n\n    useEffect(() => {\n      const size = listRef.current.length;\n      if (size > 1 && listRef.current[size - 1] !== null) {\n        listRef.current[size - 1].focus(); //focuses on recently created task\n      }\n      \n    }, [editingList.length]);\n  \n    function handleTaskChange(event, index) {\n      const newListItems = [...editingList]\n      console.log(\"NEW LIST ITEMS\", newListItems) \n      console.log(\"INDEX\", index)\n      newListItems[index] = event.target.value\n      setEditingList(newListItems)\n      event.target.style.height = '1em';\n      event.target.style.height = `${event.target.scrollHeight}px`; \n      \n    }\n    function handleTitleChange(event){\n      setEditingTitle(event.target.value)\n    }\n  \n  \n    function handleUserClickOut(event,index){\n      const taskContent=event.target.value\n      // console.log(\"CLICKED OUT\")\n      if (taskContent.length===0){\n        console.log(\"EMPTY TASK\")\n        const newEditingList=[...editingList]\n        newEditingList.pop(index)\n        setEditingList(newEditingList)\n      }\n    }\n    function handleCloseEditMode(event){\n      handleChangeTaskState(listIndex, \"editModeDisplayed\", false)\n      if (taskLists[listIndex].title.length===0){\n        const newTaskLists = [...taskLists]\n        handleChangeTaskState(listIndex, \"title\", \"Untitled\")\n      }\n    }\n  \n    function createNewTask(event) {\n      const text = event.target.value\n      setEditingList([...editingList, text])\n    }\n\n    function handleSave(event){\n    \n      handleChangeTaskState(listIndex, \"currentItems\", editingList)\n      handleChangeTaskState(listIndex, \"title\", editingTitle)\n    }\n    \n    return (\n      <div id=\"edit-mode-container\" >\n      <div className=\"list-container edit-mode\">\n        <div className='list-header'>      \n          <input className=\"title-input list-name\" value={editingTitle} onChange={(event)=>{handleTitleChange(event)}}></input>\n          <button onClick={(event)=>{handleCloseEditMode(event)}} className=\"edit-list-close-button\"><X color=\"gray\"/></button>\n          </div>\n        <ul>\n          {editingList.map((item, index) => (\n            <li key={index}>\n              <input \n                type= 'checkbox' disabled={true}/>\n              <textarea \n                rows=\"1\" \n                value={item}\n                ref = {el => listRef.current = [...listRef.current, el]}\n                onBlur={(event) => {handleUserClickOut(event,index)}}  \n                onChange={(event) => {handleTaskChange(event, index)}} \n                className=\"task\"\n              />\n            </li>\n          ))}\n          <li>\n            <textarea \n              rows=\"1\" \n              placeholder='+ New Task' \n              onClick={(e) => createNewTask(e)} \n              className=\"task\"\n            /> \n            <input \n              disabled={true}\n              type= 'checkbox'\n              id='invisible-checkbox'\n            />\n          </li>\n        </ul>\n        <button onClick={(event)=>{handleSave(event)}}>Save</button>\n      </div>\n      </div>\n\n    );\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}