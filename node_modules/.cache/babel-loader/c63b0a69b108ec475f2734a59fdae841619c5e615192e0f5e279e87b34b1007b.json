{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx\",\n  _s = $RefreshSig$();\nimport TaskList from \"./TaskList\";\nimport \"../styles/AllTaskLists.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllTaskLists() {\n  _s();\n  const [taskLists, setTaskLists] = useState([]);\n  useEffect(() => {\n    const taskLists = JSON.parse(localStorage.getItem(\"taskLists\"));\n    if (taskLists) {\n      setTaskLists(taskLists);\n    }\n  }, []);\n  useEffect(() => {\n    if (taskLists.length > 0) {\n      localStorage.setItem(\"taskLists\", JSON.stringify(taskLists));\n    }\n  }, [taskLists]);\n  function handleNewList() {\n    setTaskLists([...taskLists, {\n      name: \"Title\",\n      currentItems: [],\n      checkedItems: [],\n      editModeDisplayed: true,\n      optionsDisplayed: false\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-lists-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          handleNewList(event);\n        },\n        children: \"New List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), taskLists.map((taskList, index) => {\n      return /*#__PURE__*/_jsxDEV(TaskList, {\n        listIndex: index,\n        taskLists: taskLists,\n        setTaskLists: setTaskLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(AllTaskLists, \"8ciFel3O+wwIDlF4rBNFlN+fj7E=\");\n_c = AllTaskLists;\nvar _c;\n$RefreshReg$(_c, \"AllTaskLists\");","map":{"version":3,"names":["TaskList","useEffect","useState","jsxDEV","_jsxDEV","AllTaskLists","_s","taskLists","setTaskLists","JSON","parse","localStorage","getItem","length","setItem","stringify","handleNewList","name","currentItems","checkedItems","editModeDisplayed","optionsDisplayed","className","children","onClick","event","fileName","_jsxFileName","lineNumber","columnNumber","map","taskList","index","listIndex","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx"],"sourcesContent":["import TaskList from \"./TaskList\"\nimport \"../styles/AllTaskLists.css\"\nimport { useEffect, useState } from \"react\"\n\nexport default function AllTaskLists() {\n  const [taskLists, setTaskLists] = useState([]); \n  \n  useEffect(() => {\n    const taskLists = JSON.parse(localStorage.getItem(\"taskLists\"));\n    if (taskLists) {\n      setTaskLists(taskLists);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (taskLists.length > 0) {\n      localStorage.setItem(\"taskLists\", JSON.stringify(taskLists));\n    }\n  } , [taskLists]);\n\n\n\n  function handleNewList() {\n    setTaskLists([\n      ...taskLists,\n      {\n        name: \"Title\",\n        currentItems: [],\n        checkedItems: [],\n        editModeDisplayed: true,\n        optionsDisplayed: false,\n      }\n    ])\n  }\n\n\n  return (\n    <div className=\"all-lists-container\">\n      <header>\n      <button onClick={(event)=>{handleNewList(event)}}>New List</button>\n      </header>\n    \n      {taskLists.map((taskList, index) => {\n        return (\n          <TaskList\n            listIndex={index}\n            taskLists={taskLists}\n            setTaskLists={setTaskLists}\n          />\n        )\n      })}\n  \n      {/* <TaskList/>\n      <TaskList/> */}\n      {/* <button className=\"add-list-button\" onClick={() => handleAddTask}>Add Task</button> */}\n    </div>\n  )\n}"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAO,4BAA4B;AACnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMM,SAAS,GAAGE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC/D,IAAIL,SAAS,EAAE;MACbC,YAAY,CAACD,SAAS,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAENN,SAAS,CAAC,MAAM;IACd,IAAIM,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;MACxBF,YAAY,CAACG,OAAO,CAAC,WAAW,EAAEL,IAAI,CAACM,SAAS,CAACR,SAAS,CAAC,CAAC;IAC9D;EACF,CAAC,EAAG,CAACA,SAAS,CAAC,CAAC;EAIhB,SAASS,aAAaA,CAAA,EAAG;IACvBR,YAAY,CAAC,CACX,GAAGD,SAAS,EACZ;MACEU,IAAI,EAAE,OAAO;MACbC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,iBAAiB,EAAE,IAAI;MACvBC,gBAAgB,EAAE;IACpB,CAAC,CACF,CAAC;EACJ;EAGA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCnB,OAAA;MAAAmB,QAAA,eACAnB,OAAA;QAAQoB,OAAO,EAAGC,KAAK,IAAG;UAACT,aAAa,CAACS,KAAK,CAAC;QAAA,CAAE;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,EAERtB,SAAS,CAACuB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAClC,oBACE5B,OAAA,CAACJ,QAAQ;QACPiC,SAAS,EAAED,KAAM;QACjBzB,SAAS,EAAEA,SAAU;QACrBC,YAAY,EAAEA;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKC,CAAC;AAEV;AAACvB,EAAA,CArDuBD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}