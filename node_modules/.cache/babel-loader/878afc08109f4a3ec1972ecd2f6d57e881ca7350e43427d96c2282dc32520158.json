{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const [listItems, setListItems] = useState([]); //[ declared thing, how you set it to something/override]\n  const [checked, setChecked] = useState(false);\n  function handleInputChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleCheckBoxChange(event, index) {\n    const currCheckbox = event.target.value;\n    setChecked();\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    if (taskContent.length === 0) {\n      const newListItems = [...listItems];\n      newListItems.pop(index);\n      setListItems(newListItems);\n    }\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: \"true\",\n          type: \"checkbox\",\n          checked: checked //checked left= if box is checked or not, checked right= variable storing T/F for checked\n          ,\n          onChange: event => {\n            handleCheckBoxChange(event, index);\n          },\n          className: \"task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onBlur: event => {\n            handleUserClickOut(event, index);\n          },\n          type: \"checkbox\",\n          value: item,\n          onChange: event => {\n            handleInputChange(event, index);\n          },\n          className: \"task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: \"true\",\n          type: \"checkbox\",\n          className: \"invisible-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: \"\",\n          placeholder: \"+ New Task\",\n          onChange: e => createNewTask(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n_s(TaskList, \"VZwJ0fWZOCxMjaUQK0jD9MRdpHo=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","listItems","setListItems","checked","setChecked","handleInputChange","event","index","newListItems","target","value","style","height","scrollHeight","handleCheckBoxChange","currCheckbox","handleUserClickOut","taskContent","length","pop","createNewTask","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","disabled","type","onChange","autoFocus","onBlur","placeholder","e","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\n\n\n\nexport default function TaskList() {\n\n  const [listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n  const[checked, setChecked]= useState(false)\n\n  function handleInputChange(event, index) {\n    const newListItems = [...listItems]\n    newListItems[index] = event.target.value\n    setListItems(newListItems)\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`; \n    \n  }\n  function handleCheckBoxChange(event,index){\n    const currCheckbox=event.target.value\n    setChecked()\n\n  }\n\n  function handleUserClickOut(event,index){\n    const taskContent=event.target.value\n    if (taskContent.length===0){\n      const newListItems=[...listItems]\n      newListItems.pop(index)\n      setListItems(newListItems)\n    }\n\n  }\n  function createNewTask(event) {\n    const text = event.target.value\n    setListItems([...listItems, text])\n\n  }\n\n\n  return (\n    <div className=\"TaskList\">\n      <h1>Task List</h1>\n      <ul>\n        {listItems.map((item, index) => (\n          <li key={index}>\n            <input \n              disabled='true'\n              type= 'checkbox'\n              checked={checked} //checked left= if box is checked or not, checked right= variable storing T/F for checked\n              onChange={(event) => {handleCheckBoxChange(event, index)}} className=\"task\" autoFocus />\n              <textarea onBlur={(event)=>{handleUserClickOut(event,index)}} type= 'checkbox' value={item} onChange={(event) => {handleInputChange(event, index)}} className=\"task\" autoFocus />\n          </li>\n        ))}\n        <li>\n        <input \n              disabled='true'\n              type= 'checkbox'\n              className='invisible-checkbox'\n              />\n          <textarea value={\"\"} placeholder='+ New Task' onChange={(e) => createNewTask(e)} /> \n        </li>\n      </ul>\n\n    </div>\n  );\n\n\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}