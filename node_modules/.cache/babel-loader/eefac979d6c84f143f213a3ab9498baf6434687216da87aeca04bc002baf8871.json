{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/pui-project/src/components/EditListMode.jsx\";\nimport React, { useState } from 'react';\nimport ListOptions from './ListOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditListMode({\n  setListItems,\n  setTitle\n}) {\n  // const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n  // const [displayed, setDisplayed]=useState(true)\n  // const[title,setTitle]=useState('Title')\n\n  function handleTaskChange(event, index) {\n    const newListItems = [...listItems];\n    newListItems[index] = event.target.value;\n    setListItems(newListItems);\n    event.target.style.height = '1em';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  }\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleCheckBoxChange(event, index) {\n    const currCheckbox = event.target.value;\n    setChecked();\n  }\n  function handleUserClickOut(event, index) {\n    const taskContent = event.target.value;\n    if (taskContent.length === 0) {\n      const newListItems = [...listItems];\n      newListItems.pop(index);\n      setListItems(newListItems);\n    }\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  function handleDone(event) {\n    setListItems(listItems);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => {\n          handleTitleChange(event);\n        },\n        className: \"list-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          handleOptionsClick(event);\n        },\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checked //checked left= if box is checked or not, checked right= variable storing T/F for checked\n          ,\n          onChange: event => {\n            handleCheckBoxChange(event, index);\n          },\n          className: \"task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"1\",\n          onBlur: event => {\n            handleUserClickOut(event, index);\n          },\n          onChange: event => {\n            handleTaskChange(event, index);\n          },\n          className: \"task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"1\",\n          value: \"\",\n          placeholder: \"+ New Task\",\n          onClick: e => createNewTask(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: \"true\",\n          type: \"checkbox\",\n          id: \"invisible-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => {\n        handleDone(event);\n      },\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_c = EditListMode;\nvar _c;\n$RefreshReg$(_c, \"EditListMode\");","map":{"version":3,"names":["React","useState","ListOptions","jsxDEV","_jsxDEV","EditListMode","setListItems","setTitle","handleTaskChange","event","index","newListItems","listItems","target","value","style","height","scrollHeight","handleTitleChange","handleCheckBoxChange","currCheckbox","setChecked","handleUserClickOut","taskContent","length","pop","createNewTask","text","handleDone","className","children","title","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleOptionsClick","map","item","type","checked","autoFocus","rows","onBlur","placeholder","e","disabled","id","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/pui-project/src/components/EditListMode.jsx"],"sourcesContent":["import React, {useState} from 'react'\nimport ListOptions from './ListOptions'\n\n\nexport default function EditListMode({setListItems, setTitle}) {\n\n    // const[listItems, setListItems] = useState([]) //[ declared thing, how you set it to something/override]\n    // const [displayed, setDisplayed]=useState(true)\n    // const[title,setTitle]=useState('Title')\n  \n    function handleTaskChange(event, index) {\n      const newListItems = [...listItems]\n      newListItems[index] = event.target.value\n      setListItems(newListItems)\n      event.target.style.height = '1em';\n      event.target.style.height = `${event.target.scrollHeight}px`; \n      \n    }\n    function handleTitleChange(event){\n      setTitle(event.target.value)\n    }\n  \n    function handleCheckBoxChange(event,index){\n      const currCheckbox=event.target.value\n      setChecked()\n  \n    }\n  \n    function handleUserClickOut(event,index){\n      const taskContent=event.target.value\n      if (taskContent.length===0){\n        const newListItems=[...listItems]\n        newListItems.pop(index)\n        setListItems(newListItems)\n      }\n    }\n  \n  \n    function createNewTask(event) {\n      const text = event.target.value\n      setListItems([...listItems, text])\n  \n    }\n    function handleDone(event){\n      setListItems(listItems)\n    }\n  \n  \n    return (\n      <div className=\"TaskList\">\n        <div className='list-header'>      \n          <input value={title} onChange={(event)=>{handleTitleChange(event)}} className=\"list-name\"></input>\n          <button onClick={(event)=>{handleOptionsClick(event)}}>edit</button>\n          </div>\n  \n        <ul>\n          {listItems.map((item, index) => (\n            <li key={index}>\n              <input \n                type= 'checkbox'\n                checked={checked} //checked left= if box is checked or not, checked right= variable storing T/F for checked\n                onChange={(event) => {handleCheckBoxChange(event, index)}} className=\"task\" autoFocus />\n                <textarea rows=\"1\" onBlur={(event)=>{handleUserClickOut(event,index)}}  onChange={(event) => {handleTaskChange(event, index)}} className=\"task\" autoFocus />\n            </li>\n          ))}\n          <li>\n            <textarea rows=\"1\" value={\"\"} placeholder='+ New Task' onClick={(e) => createNewTask(e)} /> \n            <input \n                disabled='true'\n                type= 'checkbox'\n                id='invisible-checkbox'\n                />\n          </li>\n        </ul>\n        <button onClick={(event)=>{handleDone(event)}}>Save</button>\n  \n      </div>\n    );\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}