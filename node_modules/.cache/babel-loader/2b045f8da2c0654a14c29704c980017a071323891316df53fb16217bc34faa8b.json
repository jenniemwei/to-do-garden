{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx\",\n  _s = $RefreshSig$();\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport TaskList from \"./TaskList\";\nimport { HelpCircle } from \"react-feather\";\nimport \"../styles/AllTaskLists.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllTaskLists() {\n  _s();\n  //holds objects that represent each list\n  const [taskLists, setTaskLists] = useState([]);\n\n  //manages local storage, saves taskLists state to local storage everytime it changes\n  useEffect(() => {\n    const taskListsFromLocal = JSON.parse(localStorage.getItem(\"taskLists\"));\n    console.log(taskListsFromLocal);\n    if (taskListsFromLocal == null) {\n      console.log(\"THIS IS CALLED\");\n      localStorage.setItem(\"taskLists\", JSON.stringify([{\n        title: \"Welcome to To Do Garden!\",\n        currentItems: [\"Check off tasks to grow flowers!\", \"Click the three dots to edit lists or delete lists\", \"After clicking 'edit list' start typing to edit tasks or title\", \"delete this list and create your own!\"],\n        checkedItems: [],\n        editModeDisplayed: false,\n        optionsDisplayed: false,\n        isWelcomeList: true,\n        completedDisplayed: false\n      }]));\n      setTaskLists([{\n        title: \"Welcome to To Do Garden!\",\n        currentItems: [\"Check off tasks to grow flowers!\", \"Click the three dots to edit lists or delete lists\", \"After clicking 'edit list' start typing to edit tasks or title\", \"delete this list and create your own!\"],\n        checkedItems: [],\n        editModeDisplayed: false,\n        optionsDisplayed: false,\n        isWelcomeList: true,\n        completedDisplayed: false\n      }]);\n    } else {\n      setTaskLists(taskListsFromLocal);\n    }\n  }, []);\n  useEffect(() => {\n    if (taskLists != null && taskLists.length > 0) {\n      localStorage.setItem(\"taskLists\", JSON.stringify(taskLists));\n    }\n  }, [taskLists]);\n\n  // Creates new list in taskLists state\n  function handleNewList() {\n    setTaskLists([...taskLists, {\n      title: \"\",\n      currentItems: [],\n      checkedItems: [],\n      editModeDisplayed: true,\n      optionsDisplayed: false,\n      isWelcomeList: false\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"website-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"homepage-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"homepage-title\",\n        children: \"To Do Garden \\uD81A\\uDD23.\\uD81A\\uDD67.\\uD81A\\uDC7C.\\u2698 \\u2740\\u0F09\\u2027\\u02DA.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"blue-button\",\n        onClick: event => {\n          handleNewList(event);\n        },\n        children: \"+ NEW LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n      columnsCountBreakPoints: {\n        700: 1,\n        800: 2,\n        1200: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        gutter: \"2vw\",\n        children: taskLists.map((taskList, index) => {\n          return /*#__PURE__*/_jsxDEV(TaskList, {\n            listIndex: index,\n            taskLists: taskLists,\n            setTaskLists: setTaskLists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(AllTaskLists, \"8ciFel3O+wwIDlF4rBNFlN+fj7E=\");\n_c = AllTaskLists;\nvar _c;\n$RefreshReg$(_c, \"AllTaskLists\");","map":{"version":3,"names":["Masonry","ResponsiveMasonry","TaskList","HelpCircle","useEffect","useState","jsxDEV","_jsxDEV","AllTaskLists","_s","taskLists","setTaskLists","taskListsFromLocal","JSON","parse","localStorage","getItem","console","log","setItem","stringify","title","currentItems","checkedItems","editModeDisplayed","optionsDisplayed","isWelcomeList","completedDisplayed","length","handleNewList","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","event","columnsCountBreakPoints","gutter","map","taskList","index","listIndex","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/AllTaskLists.jsx"],"sourcesContent":["import Masonry,{ResponsiveMasonry} from \"react-responsive-masonry\"; \nimport TaskList from \"./TaskList\";\nimport { HelpCircle } from \"react-feather\";\nimport \"../styles/AllTaskLists.css\"\nimport { useEffect, useState } from \"react\"\n\nexport default function AllTaskLists() {\n  //holds objects that represent each list\n  const [taskLists, setTaskLists] = useState([]); \n  \n  //manages local storage, saves taskLists state to local storage everytime it changes\n  useEffect(() => {\n    const taskListsFromLocal = JSON.parse(localStorage.getItem(\"taskLists\"));\n\n    console.log(taskListsFromLocal);\n\n    if (taskListsFromLocal == null) {\n      console.log(\"THIS IS CALLED\");\n      localStorage.setItem(\"taskLists\", JSON.stringify([\n        {\n          title: \"Welcome to To Do Garden!\",\n          currentItems: [\"Check off tasks to grow flowers!\", \"Click the three dots to edit lists or delete lists\", \"After clicking 'edit list' start typing to edit tasks or title\", \"delete this list and create your own!\"],\n          checkedItems: [],\n          editModeDisplayed: false,\n          optionsDisplayed: false,\n          isWelcomeList: true,\n          completedDisplayed: false,\n        }\n      ]));\n      setTaskLists([\n        {\n          title: \"Welcome to To Do Garden!\",\n          currentItems: [\"Check off tasks to grow flowers!\", \"Click the three dots to edit lists or delete lists\", \"After clicking 'edit list' start typing to edit tasks or title\", \"delete this list and create your own!\"],\n          checkedItems: [],\n          editModeDisplayed: false,\n          optionsDisplayed: false,\n          isWelcomeList: true,\n          completedDisplayed: false,\n        }\n      ]);\n    } else {\n      setTaskLists(taskListsFromLocal);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (taskLists != null && taskLists.length > 0) {\n      localStorage.setItem(\"taskLists\", JSON.stringify(taskLists));\n    }\n  } , [taskLists]);\n\n\n// Creates new list in taskLists state\n  function handleNewList() {\n    setTaskLists([\n      ...taskLists,\n      {\n        title: \"\",\n        currentItems: [],\n        checkedItems: [],\n        editModeDisplayed: true,\n        optionsDisplayed: false,\n        isWelcomeList: false,\n      }\n    ])\n  }\n\n\n  return (\n    <div id=\"website-container\">\n    <header id=\"homepage-header\">\n      <h1 id=\"homepage-title\">To Do Garden ñ§£.ñ•ß.ñ°º.‚öò ‚ùÄ‡ºâ‚ÄßÀö.</h1>\n      <button className=\"blue-button\" onClick={(event)=>{handleNewList(event)}}>+ NEW LIST</button>\n    </header>\n    <ResponsiveMasonry \n    \n    columnsCountBreakPoints={{ 700: 1, 800: 2, 1200: 3 }}> \n      <Masonry gutter=\"2vw\">\n      {taskLists.map((taskList, index) => {\n        return (\n          <TaskList\n            listIndex={index}\n            taskLists={taskLists}\n            setTaskLists={setTaskLists}\n          />\n        )\n      })}\n      </Masonry>\n    </ResponsiveMasonry>\n</div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}