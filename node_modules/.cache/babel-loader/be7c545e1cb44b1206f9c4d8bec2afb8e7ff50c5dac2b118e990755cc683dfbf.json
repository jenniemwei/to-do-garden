{"ast":null,"code":"var _jsxFileName = \"/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList({\n  index,\n  taskLists,\n  setTaskLists\n}) {\n  _s();\n  // const[listItems, setListItems] = useState(['task 1 task 1 task 1 ','task 2','task 3 ', 'task 4']) //[ declared thing, how you set it to something/override]\n  // const [checkedItems, setCheckedItems] = useState([])\n  // // const[checked, setChecked] = useState(false)\n  // const[optionsDisplayed, setOptionsDisplayed]=useState(false)\n  // const[title,setTitle] = useState('Title')\n\n  // state for each TaskList before save\n  const [editModeDisplayed, setEditModeDisplayed] = useState(false);\n  function handleChangeTaskState(index, key, value) {\n    const newTaskLists = [...taskLists];\n    newTaskLists[index][key] = value;\n    setTaskLists(newTaskLists);\n  }\n\n  // function handleTaskChange(event, index) {\n  //   const newListItems = [...listItems]\n  //   newListItems[index] = event.target.value\n  //   setListItems(newListItems)\n  //   event.target.style.height = '1em';\n  //   event.target.style.height = `${event.target.scrollHeight}px`; \n\n  // }\n  // function handleTitleChange(event){\n  //   setTitle(event.target.value)\n  // }\n\n  const listIndex = index;\n  const listItems = taskLists[index].currentItems;\n  const checkedItems = taskLists[index].completedItems;\n  function handleCheckBoxChange(event, index, item) {\n    const currCheckbox = event.target.value;\n    // setChecked()\n    const newListItems = [...listItems];\n    newListItems.splice(index, 1);\n    const newCheckedItems = [...checkedItems, item];\n    // const newListItems = listItems.filter((item, i) => i !== index)\n\n    handleChangeTaskState(listIndex, \"checkedItems\", newCheckedItems);\n    handleChangeTaskState(listIndex, \"currentItems\", newListItems);\n  }\n  function handleOptionsClick(event) {\n    handleChangeTaskState(listIndex, \"optionsDisplayed\", !taskLists[listIndex].optionsDisplayed);\n    setOptionsDisplayed(!optionsDisplayed);\n  }\n  function createNewTask(event) {\n    const text = event.target.value;\n    setListItems([...listItems, text]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [editModeDisplayed && /*#__PURE__*/_jsxDEV(EditListMode, {\n      listItems: listItems,\n      setListItems: setListItems,\n      setTitle: setTitle,\n      title: title,\n      setEditModeDisplayed: setEditModeDisplayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"list-name\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            handleOptionsClick(event);\n          },\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), optionsDisplayed && /*#__PURE__*/_jsxDEV(ListOptions, {\n        setEditModeDisplayed: setEditModeDisplayed,\n        setOptionsDisplayed: setOptionsDisplayed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-items-container\",\n        children: [listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: false,\n            onChange: event => {\n              handleCheckBoxChange(event, index, item);\n            },\n            className: \"task\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"displayed-task\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), checkedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: true,\n            checked: true,\n            className: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"displayed-task\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, index + listItems.length, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed\n_s(TaskList, \"3pdoB+wsrPkDfq1w7VJQuNRFgQM=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","ListOptions","EditListMode","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","index","taskLists","setTaskLists","_s","editModeDisplayed","setEditModeDisplayed","handleChangeTaskState","key","value","newTaskLists","listIndex","listItems","currentItems","checkedItems","completedItems","handleCheckBoxChange","event","item","currCheckbox","target","newListItems","splice","newCheckedItems","handleOptionsClick","optionsDisplayed","setOptionsDisplayed","createNewTask","text","setListItems","children","setTitle","title","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","type","checked","onChange","autoFocus","disabled","length","_c","$RefreshReg$"],"sources":["/Users/jenniewei/Documents/GitHub/to-do-lists/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/Lists.css';\nimport ListOptions from './ListOptions';\nimport EditListMode from './EditListMode';\n\nexport default function TaskList({index, taskLists, setTaskLists}) {\n\n  // const[listItems, setListItems] = useState(['task 1 task 1 task 1 ','task 2','task 3 ', 'task 4']) //[ declared thing, how you set it to something/override]\n  // const [checkedItems, setCheckedItems] = useState([])\n  // // const[checked, setChecked] = useState(false)\n  // const[optionsDisplayed, setOptionsDisplayed]=useState(false)\n  // const[title,setTitle] = useState('Title')\n\n  // state for each TaskList before save\n  const [editModeDisplayed, setEditModeDisplayed] = useState(false)\n\n\n  function handleChangeTaskState(index, key, value) {\n    const newTaskLists = [...taskLists]\n    newTaskLists[index][key] = value\n    setTaskLists(newTaskLists)\n  }\n\n  // function handleTaskChange(event, index) {\n  //   const newListItems = [...listItems]\n  //   newListItems[index] = event.target.value\n  //   setListItems(newListItems)\n  //   event.target.style.height = '1em';\n  //   event.target.style.height = `${event.target.scrollHeight}px`; \n    \n  // }\n  // function handleTitleChange(event){\n  //   setTitle(event.target.value)\n  // }\n  \n  const listIndex= index\n  const listItems = taskLists[index].currentItems\n  const checkedItems = taskLists[index].completedItems\n\n  function handleCheckBoxChange(event,index,item){\n    const currCheckbox=event.target.value\n    // setChecked()\n    const newListItems = [...listItems];\n    newListItems.splice(index,1);\n    const newCheckedItems = [...checkedItems, item]\n    // const newListItems = listItems.filter((item, i) => i !== index)\n    \n    handleChangeTaskState(listIndex, \"checkedItems\", newCheckedItems)\n    handleChangeTaskState(listIndex, \"currentItems\", newListItems)\n\n  }\n\n  function handleOptionsClick(event){\n    handleChangeTaskState(listIndex, \"optionsDisplayed\", !taskLists[listIndex].optionsDisplayed)\n    setOptionsDisplayed(!optionsDisplayed)\n  }\n\n  function createNewTask(event) {\n    const text = event.target.value\n    setListItems([...listItems, text])\n  }\n  \n\n\n  return (\n    <>\n      {editModeDisplayed&&<EditListMode \n        listItems={listItems}\n        setListItems={setListItems}\n        setTitle={setTitle}\n        title={title}\n        setEditModeDisplayed={setEditModeDisplayed}\n      />}\n      <div className=\"task-list\">\n        <div className='list-header'>      \n          <h1 className=\"list-name\">{title}</h1> \n          {/* make title not an input not working */}\n          <button onClick={(event)=>{handleOptionsClick(event)}}>edit</button>\n          </div>\n          <hr></hr>\n\n          {optionsDisplayed && <ListOptions setEditModeDisplayed={setEditModeDisplayed} setOptionsDisplayed={setOptionsDisplayed}/>}\n        <ul className=\"list-items-container\">\n          {listItems.map((item, index) => (\n            <li className='task-container' key={index}>\n              <input \n                type= 'checkbox'\n                checked={false}\n                onChange={(event) => {handleCheckBoxChange(event, index,item)}} className=\"task\" autoFocus />\n                <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n          <h3>Completed</h3>\n          {checkedItems.map((item, index) => (\n            <li className='task-container' key={index + listItems.length}>\n              <input type='checkbox' disabled={true} checked={true} className=\"task\" />\n              <p className='displayed-task'>{item}</p>\n            </li>\n          ))}\n        </ul>\n\n      </div>\n    </>\n  );\n}\n//arrow function =>{handleInputChange(event,index)} allows parameters passed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}